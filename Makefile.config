ifndef LEVEL
LEVEL			= .
endif

PREPARATION_FLAGS	=
INSTRUMENT_FLAGS	=
ANALYZE_FLAGS		=

RESULTS			= results
INPUTS			= testinputs
EXPERIMENTS		= experiments

OUTPUT			= $(LEVEL)/$(RESULTS)
TESTINPUT		= $(LEVEL)/$(INPUTS)

ifndef VERBOSE
VERB 			= @
endif

ifndef COMPILER
COMPILER		= g++
endif

# Where is Polly?
# TODO: Make this configurable with autoconf.
POLLY			= LLVMPolly.so
LIKWID_BINARY           = likwid-perfctr
LIKWID_FILTER		= $(LEVEL)/filters/likwid.csv

LINKER_DIR		= $(LEVEL)/linker

# Where is PAPI?
# TODO: Make this configurable with autoconf.
#PAPI_LDFLAGS 		= -L/home/simbuerg/opt/papi/lib/ -lpapi
#PAPI_CFLAGS		= -I/home/simbuerg/opt/papi/include/
# Where is the Profiling lib?
# TODO: Make this configurable with autoconf.
PPROF  			= pprof-analyze
#PROFILING_FLAGS 	= -L$(LEVEL)/libpprof/ -lpprof

# In what unit is the time measured? us / ns?
TIME_UNIT_NS		= 1000000000
TIME_UNIT_US		= 1000000
TIME_UNIT		= $(TIME_UNIT_NS)

# Additional flags for the classes.
# See: Makefile.common for defining additional classes.
VARIANT_std		=
VARIANT_jit		=
VARIANT_ext		=
VARIANT_raw             =
VARIANT_caddy		= -polly-allow-algebraic -caddy

POLLI_FLAGS_raw		= ${POLLI_FLAGS} -no-recompilation -lpapi
POLLI_FLAGS_std		= ${POLLI_FLAGS} -O3 -lpapi -lpprof \
			  -no-recompilation \
			  -polly-detect-keep-going \
			  -polly-detect-track-failures \
			  -polly-use-runtime-alias-checks=false \
			  -polly-delinearize=false
POLLI_FLAGS_jit		= ${POLLI_FLAGS} -O3 -lpapi -lpprof -jitable \
			  -polly-detect-keep-going \
			  -polly-detect-track-failures \
			  -polly-use-runtime-alias-checks=false \
			  -polly-delinearize=false
POLLI_FLAGS_ext		= ${POLLI_FLAGS_jit}
POLLI_FLAGS_caddy	= ${POLLI_FLAGS_jit}

ifndef OPT_FLAGS
OPT_FLAGS		= -basicaa -tbaa
endif
OPT_FLAGS_raw		=
OPT_FLAGS_std		=
OPT_FLAGS_jit		= -polly-jit-scops
OPT_FLAGS_ext		= ${OPT_FLAGS_jit}
OPT_FLAGS_caddy		= -polly-allow-algebraic -caddy-scops-pass

# The TIME_SCRIPT variable is used to wrap calls to the binaries for gathering
# additional information. You can do whatever you want in there, as long as
# the binary still gets executed.
TIME_SCRIPT             = test.sh

# Extension names for the output files.
BIN_EXT                 = .bin
TIME_EXT		= .time
CALLS_EXT               = .calls
PROFILE_EXT             = .profile.out

# Calibration value for the average duration of a call to the timing facilities
# of your machine. Use the 'calibrate' binary to determine the value for your
# machine and insert it here.
# TODO: We should use a automake script to generate the value before running
# for the first time.

#palazo
#PAPI_CALIBRATION        = 408.471263
#ivy
#PAPI_CALIBRATION        = 949.890758
#hydra
#PAPI_CALIBRATION	= 809.699880
PAPI_CALIBRATION    = 280.023169
PAPI_CALL_STACK_FILE    = papi_call_stack.log
PPROF_PREFIX		= PPROF-$(EXPERIMENT)
