Search.setIndex({"docnames": ["CHANGELOG", "about", "advanced/cli", "advanced/index", "basics/actions", "basics/configuration", "basics/containers", "basics/index", "concepts/command", "concepts/environments", "concepts/experiments", "concepts/projects", "concepts/source", "index"], "filenames": ["CHANGELOG.md", "about.md", "advanced/cli.md", "advanced/index.md", "basics/actions.md", "basics/configuration.md", "basics/containers.md", "basics/index.md", "concepts/command.md", "concepts/environments.md", "concepts/experiments.md", "concepts/projects.md", "concepts/source.md", "index.rst"], "titles": ["6.8 (2023-10-09)", "BenchBuild Documentation", "CLI", "SLURM", "Actions", "Configure", "Containers", "Installation", "Commands", "Environment", "Experiment", "Project", "Source", "Welcome to bencbuild\u2019s documentation!"], "terms": {"ci": 0, "test": [0, 7, 8, 12], "both": [0, 4], "db": [0, 4], "support": [0, 3, 6, 7, 8, 13], "without": 0, "af7bfd90": 0, "coverag": 0, "databas": [0, 6], "enabl": [0, 12], "0b8d6034": 0, "add": [0, 1, 4, 6, 12, 13], "cli": [0, 13], "report": 0, "64ce9f87": 0, "wrap": [0, 4, 8], "binari": [0, 5, 6, 7, 8], "d4c6841d": 0, "revert": 0, "default": [0, 1, 3, 4, 5, 6, 12, 13], "set": [0, 3, 4, 6, 7, 8, 12, 13], "connect_str": 0, "sqlite": 0, "806520d6": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12], "context": [0, 6, 8, 12, 13], "var": 0, "instead": [0, 12], "env": [0, 4, 5, 6, 8, 13], "e3ea47f0": 0, "make": [0, 1, 5, 6, 7, 8, 12], "github": [0, 8], "actual": 0, "its": [0, 6, 12, 13], "own": [0, 1, 2, 3, 4, 6, 12], "e0c7ab67": 0, "bb_coverage_path": 0, "coveragerc": 0, "141afafa": 0, "requir": [0, 3, 4, 8, 12, 13], "curli": 0, "brace": 0, "variabl": [0, 5, 6, 8], "3ae8b335": 0, "5b9c9906": 0, "action": [0, 13], "re": [0, 3, 5], "rais": [0, 4, 12], "caught": 0, "except": [0, 5], "e4bff984": 0, "close": 0, "561": 0, "environ": [0, 3, 4, 5, 7, 8, 13], "buildah": [0, 7, 13], "cannot": [0, 3, 6, 8, 12], "find": [0, 3, 4, 5, 6, 12], "base": [0, 3, 5, 6, 7, 8, 13], "imag": [0, 13], "eb03c363": 0, "run": [0, 1, 3, 6, 8, 13], "auto": [0, 12], "walru": 0, "over": [0, 5], "all": [0, 4, 5, 6, 8, 12], "benchbuild": [0, 2, 3, 4, 5, 8, 12, 13], "": [0, 4, 5, 6, 8, 12], "file": [0, 3, 5, 6, 8, 12], "79ac33d8": 0, "pre": 0, "commit": [0, 12], "hook": [0, 12], "d7a2165b": 0, "drop": [0, 8], "python": [0, 4, 7, 13], "90308f2a": 0, "updat": [0, 5, 6, 12, 13], "setup": [0, 1, 3, 6, 7, 12], "v4": 0, "3e943df6": 0, "v3": 0, "dfa4cb81": 0, "command": [0, 2, 3, 7, 12, 13], "name": [0, 4, 5, 6, 7, 8, 12, 13], "valu": [0, 3, 4, 5, 6, 8, 12, 13], "label": [0, 8, 13], "07f74dd4": 0, "forc": [0, 2, 6], "alpin": [0, 6], "17": 0, "fe5d6155": 0, "widen": 0, "allow": [0, 6], "version": [0, 4, 5, 6, 7, 12, 13], "major": [0, 1], "5d29079a": 0, "unlock": 0, "latest": [0, 6], "packag": [0, 7], "7b5a704f": 0, "enforc": 0, "global": [0, 12], "dill": 0, "modul": [0, 13], "489e3039": 0, "ha": [0, 6, 8, 12], "string": [0, 4, 5, 6, 8, 12], "7a1db742": 0, "remov": [0, 6, 8], "from": [0, 2, 5, 6, 7, 8, 12], "workflow": [0, 4], "aaabc1b5": 0, "bump": 0, "patho": 0, "unbreak": 0, "gitlab": 0, "bce45d8a": 0, "disabl": [0, 2], "mkdoc": 0, "8540f880": 0, "reorder": 0, "step": [0, 13], "74379d53": 0, "increas": 0, "verbos": [0, 5, 6, 13], "max": 0, "integ": 0, "task": [0, 1, 6], "b6625d31": 0, "privat": 0, "when": [0, 4, 5, 6, 7, 8, 12], "fetch": [0, 12, 13], "represent": [0, 5, 8, 12], "d83aa666": 0, "preserv": 0, "workload": [0, 4, 8, 12], "order": [0, 4, 5, 12], "filter": [0, 8, 12], "3648dd5e": 0, "ani": [0, 1, 5, 6, 7, 8, 12, 13], "pygit2": 0, "b09d9248": 0, "unus": 0, "code": [0, 12], "0d1c890d": 0, "pin": 0, "sqlalchemi": 0, "86d45043": 0, "do": [0, 4, 5, 6, 12], "overwrit": 0, "config": [0, 5, 6], "option": [0, 3, 5, 6, 8, 12], "i": [0, 1, 3, 4, 5, 6, 7, 8, 12], "b1a095c1": 0, "improv": 0, "error": [0, 4, 8, 13], "handl": 0, "result": [0, 4, 6], "fbb69502": 0, "slurm": [0, 13], "contain": [0, 5, 7, 12, 13], "runroot": 0, "root": [0, 4, 5, 6, 8], "avail": [0, 5, 6, 8, 12, 13], "custom": [0, 6, 12, 13], "616a4c69": 0, "528": 0, "sourc": [0, 1, 4, 5, 6, 7, 8, 13], "sure": [0, 5, 6, 12], "we": [0, 4, 5, 6, 7, 8, 12], "manag": [0, 1, 3, 6, 7], "archiv": [0, 6, 12], "symlink": [0, 7], "properli": [0, 6], "7687f0e3": 0, "http": [0, 8, 13], "untar": 0, "84f90e75": 0, "miss": 0, "log": [0, 4, 12], "import": [0, 6, 7, 8], "aad1b287": 0, "err": 0, "19c5983c": 0, "notifi": 0, "user": [0, 5, 6, 7, 8], "fail": [0, 4], "78b890af": 0, "project": [0, 4, 6, 12, 13], "should": [0, 1, 4, 5, 6, 7, 12], "onli": [0, 1, 4, 5, 6, 7, 8, 12], "consid": [0, 6, 7, 12], "expand": [0, 4, 12, 13], "3d546314": 0, "sort": [0, 8, 12, 13], "revis": [0, 4, 8, 12, 13], "ca973ff0": 0, "project_cl": [0, 12, 13], "enumerate_revis": [0, 12, 13], "interfac": [0, 6, 12], "awar": [0, 12], "singleversionfilt": 0, "print": [0, 4, 6], "free": [0, 12], "public": 0, "api": [0, 6, 12], "introduc": 0, "type": [0, 4, 5, 6, 8, 12], "skeleton": 0, "prototyp": 0, "enumer": [0, 6, 12], "replac": [0, 8, 13], "stepclass": 0, "metaclass": 0, "init_subclass": 0, "mark": [0, 4], "stepti": 0, "covari": [0, 4], "stepabl": 0, "protocol": [0, 8, 12], "bound": [0, 4], "accept": 0, "vararg": 0, "call": [0, 2, 5, 6, 8], "implement": [0, 4, 6, 8, 12], "exactli": 0, "linter": 0, "warn": [0, 5], "debug": 0, "util": [0, 4, 8, 13], "variant": [0, 4, 12, 13], "repair": 0, "after": [0, 4, 6, 8, 12], "variantcontext": 0, "runtime_check": 0, "decor": 0, "class": [0, 4, 5, 6, 8, 12], "object": [0, 4, 5, 6, 7, 8, 12], "return": [0, 4, 5, 6, 8, 12], "sequenc": [0, 6, 8, 12], "nestedvari": 0, "clean": [0, 13], "up": [0, 1, 6, 8], "renam": 0, "stepty_co": [0, 4], "notify_step_begin_end": 0, "reduc": 0, "mypi": 0, "mutabl": 0, "gener": [0, 3, 4, 5, 7, 8], "baseversiongroup": 0, "expandableandfetchablesourc": 0, "multistep": [0, 4, 13], "render": [0, 8, 13], "unrender": 0, "pathtoken": [0, 8, 13], "explicit": 0, "safeguard": 0, "prune": [0, 8], "backup": [0, 8], "enable_rollback": 0, "creat": [0, 4, 5, 6, 8, 12, 13], "consum": [0, 8, 13], "properti": [0, 1, 4, 5, 6, 8, 12], "switch": 0, "workloadset": [0, 8, 13], "kwarg": [0, 6, 8, 12, 13], "exampl": [0, 4, 8], "onlyin": [0, 8, 13], "strictli": 0, "less": [0, 6], "than": [0, 3, 6, 12], "9": [0, 5, 7], "_is_relative_to": 0, "where": [0, 1, 3, 6, 12], "need": [0, 4, 5, 6, 7, 12], "guard": 0, "is_relative_to": 0, "els": [0, 6, 12], "depend": [0, 1, 6, 7, 12], "path": [0, 5, 6, 8, 12, 13], "python3": [0, 6], "happi": 0, "callabl": [0, 4, 6], "callback": [0, 8], "function": [0, 5, 8, 12], "getitem": 0, "constructor": 0, "wrong": 0, "self": [0, 4], "_label": 0, "str": [0, 4, 5, 6, 8, 12], "assign": [0, 4, 5, 8], "attribut": [0, 4, 6, 8, 12], "missing_ok": 0, "unlink": 0, "test_command": 0, "pickl": 0, "abl": [0, 6, 7], "pytest": 0, "git": [0, 8, 13], "might": [0, 3], "none": [0, 4, 5, 6, 8, 12], "access": [0, 3, 5, 8, 12], "cach": [0, 12], "builddir": [0, 6, 8, 12, 13], "supportsunwrap": [0, 8, 13], "cleanup": [0, 4, 8, 13], "nullrender": 0, "rootrender": [0, 8, 13], "token": [0, 12, 13], "logic": 0, "convert": [0, 5, 6, 8, 12], "scimark2": 0, "migrat": [0, 5], "clear": 0, "tracker": 0, "fresh": 0, "projectenviron": [0, 13], "avoid": [0, 5, 6, 12], "same": [0, 5, 6, 12], "twice": [0, 4], "job": [0, 5, 8], "runjob": 0, "anywher": [0, 12], "part": [0, 12], "pass": [0, 6, 8], "plumbum": [0, 8], "arg": [0, 6, 8, 12, 13], "declar": [0, 4, 8, 12, 13], "wip": 0, "fetchablesourc": [0, 12, 13], "deriv": 0, "tag": [0, 5, 6], "accessor": 0, "xz": 0, "must": 0, "x264": 0, "broken": 0, "check": [0, 4, 5, 6, 7, 12], "exist": [0, 1, 3, 5, 6, 8, 12, 13], "target": [0, 6, 13], "compil": [0, 1, 5, 8, 13], "run_test": 0, "definit": [0, 8, 13], "typing_extens": 0, "protocl": 0, "provid": [0, 1, 3, 4, 5, 6, 7, 8, 12], "map": [0, 5, 6, 8], "strip": 0, "previou": 0, "draft": 0, "workaround": 0, "correct": 0, "sprefix": 0, "stepresult": [0, 4, 13], "store": [0, 5, 6, 8, 12, 13], "tupl": [0, 4, 5, 6, 8, 12], "bzip2": 0, "marker": 0, "statu": [0, 4, 13], "experi": [0, 3, 6, 8, 13], "initi": [0, 4, 5, 6], "cleanextra": [0, 13], "correctli": 0, "oci_compli": 0, "list": [0, 5, 6, 8, 12], "scalar": [0, 5], "convers": 0, "lower": [0, 6], "case": [0, 3, 6, 13], "unnecessari": 0, "ellipsi": 0, "instanc": [0, 8], "descriptor": [0, 8], "new": [0, 1, 4, 5, 6, 8, 12], "impl": 0, "simpl": [0, 5, 12], "intersect": [0, 8], "chang": [0, 3, 4, 6], "registr": 0, "style": 0, "abstract": [0, 6, 8, 12], "method": [0, 6], "gzip": 0, "enter": 0, "interact": [0, 6, 12], "mode": 0, "typo": 0, "undo": 0, "obj": 0, "rebas": 0, "useless": 0, "throw": 0, "revisionstr": [0, 12, 13], "match": [0, 4, 8, 12], "explor": [0, 12, 13], "partial": 0, "setprojectvers": [0, 13], "context_from_revis": 0, "an": [0, 3, 4, 5, 6, 7, 8, 12, 13], "easi": 0, "wai": [0, 4, 6, 8, 12], "adapt": 0, "argument": [0, 6, 8, 12], "runprojectcontain": [0, 6, 13], "track": 0, "active_vari": 0, "multivers": 0, "mixin": 0, "activ": [0, 7], "link": [0, 12], "locat": [0, 6, 8, 12], "addprojectvers": 0, "obsolet": [0, 7], "paramet": [0, 4, 5, 6, 8, 12], "attr": 0, "ey": 0, "break": 0, "align": 0, "entrypoint": [0, 6, 13], "suppli": 0, "dedic": [0, 7], "subcommand": [0, 6], "factori": 0, "directori": [0, 4, 5, 6, 8, 12, 13], "obviou": 0, "pylint": 0, "almost": 0, "abc": [0, 6], "unbuff": [0, 2], "watch": [0, 2], "remot": [0, 6, 8, 12, 13], "434": 0, "force_tti": 0, "control": [0, 1, 6], "richhandl": 0, "435": 0, "schema": [0, 4], "silenc": 0, "sawarn": 0, "about": [0, 1, 6, 12], "428": 0, "format": [0, 8], "427": 0, "rich": 0, "stderr": 0, "415": 0, "bb_env": 0, "ignor": [0, 6], "load": [0, 3, 5, 6, 13], "414": 0, "consist": [0, 5], "behavior": [0, 4, 8, 12], "creation": [0, 6], "just": [0, 4, 6], "messag": [0, 4, 6, 13], "too": 0, "long": [0, 1], "libpod": 0, "number": [0, 5, 12], "tune": 0, "down": 0, "build": [0, 4, 6, 8, 12], "more": [0, 3, 4, 6, 12], "output": [0, 2, 4, 5, 6, 8, 12, 13], "through": [0, 4, 8], "rmi": 0, "delet": [0, 8], "stand": 0, "out": [0, 4, 6, 8], "clearli": 0, "g": [0, 4, 6, 8, 12], "split": 0, "image_exist": 0, "entiti": 0, "basic": [0, 6, 13], "emit": 0, "layer": [0, 6, 13], "event": [0, 6, 13], "construct": [0, 5, 6, 8], "progress": 0, "hashabl": [0, 6], "wise": 0, "repositori": [0, 6, 12], "unit": 0, "work": [0, 6], "each": [0, 4, 5, 6, 8, 12], "customiz": [0, 8], "templat": [0, 13], "detail": 0, "view": 0, "singl": [0, 4, 12], "condens": 0, "export": [0, 3, 6], "flag": [0, 6], "unshallow": 0, "clone": [0, 12], "befor": [0, 4, 6, 8], "dissoci": 0, "left": [0, 8, 13], "podman": [0, 7, 13], "reus": [0, 6], "bar": 0, "structur": [0, 5, 6], "other": [0, 6, 8, 12], "annot": 0, "turpl": 0, "baild": 0, "rework": 0, "handler": 0, "copi": [0, 3, 6], "sy": 0, "maybecontain": 0, "modifi": [0, 3, 5, 6], "slurm_node_dir": 0, "deal": [0, 12], "multi": 0, "line": [0, 8], "id": 0, "spawn": [0, 6], "fromlay": [0, 6, 13], "print_lay": 0, "neutral": 0, "element": 0, "multipl": [0, 4, 12], "group": [0, 13], "explicitli": 0, "state": 0, "registri": [0, 6], "conffigur": 0, "local": [0, 8, 12, 13], "lookup": 0, "possibl": [0, 5, 8], "unbound": 0, "cli_process": 0, "rmeov": 0, "some": [0, 4, 12], "functool": 0, "closur": 0, "unsplit": 0, "enviro": 0, "count": 0, "document": [0, 6], "print_project": 0, "set_limit": 0, "limit": [0, 8, 12], "better": 0, "layout": 0, "inform": [0, 1, 6, 12], "field": 0, "plugin": 0, "spam": 0, "higher": 0, "level": [0, 3], "open": 1, "toolkit": 1, "help": [1, 2], "softwar": [1, 7], "driven": 1, "empir": 1, "wa": 1, "specif": [1, 12], "defin": [1, 4, 5, 6, 8, 12], "reusabl": 1, "between": [1, 8], "differ": [1, 4, 6, 12], "It": [1, 7, 12], "mainli": 1, "assist": [1, 6, 7], "follow": [1, 4, 5, 6, 7, 8, 12], "standard": [1, 6, 8], "found": [1, 6, 8, 12], "bodi": 1, "main": [1, 6, 12, 13], "mind": 1, "If": [1, 3, 4, 5, 6, 7, 8, 12], "you": [1, 3, 4, 5, 6, 7, 8, 12], "never": 1, "have": [1, 3, 4, 6, 7, 8, 12], "reli": [1, 12], "background": 1, "ar": [1, 4, 5, 6, 7, 8, 12], "concern": 1, "execut": [1, 4, 6, 8], "dure": [1, 4], "time": [1, 4, 5], "what": [1, 8], "can": [1, 2, 3, 4, 5, 6, 7, 8, 12], "intercept": 1, "ad": [1, 6, 8], "knowledg": [1, 6], "take": [1, 4, 5, 12], "care": [1, 4], "process": [1, 6], "procedur": [1, 7], "given": [1, 5, 6, 8, 12], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 12], "being": 1, "done": [1, 3, 4, 6, 8], "extens": [1, 4, 8], "point": [1, 3, 6, 8, 12], "3": [1, 4, 5, 7, 13], "7": [1, 5, 7, 13], "8": [1, 5, 6, 7, 13], "develop": 1, "focus": 1, "effort": 1, "made": 1, "distribut": 1, "like": [1, 5, 12], "debian": 1, "linux": 1, "ship": 1, "see": [1, 3, 6], "instal": [1, 6, 13], "guid": 1, "quickli": 1, "buffer": 2, "tool": [2, 6, 7], "high": 3, "integr": 3, "cluster": [3, 7], "resourc": [3, 5], "bash": [3, 6], "script": [3, 7], "assum": [3, 6, 12], "configur": [3, 4, 8, 13], "benchbuid": 3, "sbatch": [3, 7], "your": [3, 4, 6, 7, 8, 12], "todo": [3, 4, 10, 11], "recommend": 3, "howev": [3, 6, 8, 12], "situat": 3, "complic": 3, "misc": 3, "sh": 3, "inc": 3, "The": [3, 4, 5, 6, 7, 8, 12], "bb_slurm_templ": 3, "detect": 3, "filesystem": [3, 6, 12], "No": [3, 5], "valid": [3, 5, 6, 12, 13], "risk": 3, "suit": 4, "most": 4, "A": [4, 5, 6, 8, 12, 13], "per": 4, "those": 4, "whenev": [4, 5, 12], "expeir": 4, "def": 4, "actions_for_project": 4, "usual": [4, 6, 8], "box": 4, "insid": [4, 6, 12, 13], "determin": [4, 6], "sometim": [4, 6], "comparison": 4, "achiev": 4, "usag": [4, 13], "happen": 4, "souc": 4, "exact": 4, "again": 4, "is_expand": [4, 12, 13], "enhanc": 4, "oper": 4, "put": 4, "descript": [4, 12, 13], "classvar": 4, "question": 4, "ask": 4, "check_empti": 4, "fals": [4, 5, 8], "projectstep": [4, 13], "tp": [4, 6], "static": [4, 5, 12], "clean_mountpoint": [4, 13], "unmount": 4, "remain": [4, 8], "mountpoint": [4, 6], "under": 4, "unionf": [4, 7], "extra": 4, "transact": 4, "begin_transact": [4, 13], "end_transact": [4, 13], "session": 4, "mkdir": 4, "one": [4, 5, 6, 8, 12], "e": [4, 5, 6, 7, 8, 12], "everyth": [4, 12], "regardless": 4, "upon": 4, "first": [4, 6, 12], "mutablesequ": 4, "typevar": [4, 12], "true": [4, 5, 6, 7, 8, 12], "onerror": [4, 13], "doe": [4, 6], "noth": [4, 6], "prepar": [4, 6], "stopiter": 4, "encapsul": [4, 8], "substep": 4, "child": 4, "succe": 4, "runworkload": [4, 13], "workload_ref": [4, 13], "run_onli": 4, "revision_str": 4, "checkout": [4, 6], "intenum": 4, "can_continu": [4, 13], "2": [4, 5, 6, 7, 8, 12, 13], "ok": [4, 13], "1": [4, 5, 6, 7, 8, 12, 13], "unset": [4, 13], "0": [4, 5, 7, 8, 12, 13], "log_before_aft": [4, 13], "desc": 4, "func": [4, 6, 13], "prepend_statu": [4, 13], "prepend": [4, 6, 13], "run_any_child": [4, 13], "step_has_fail": [4, 13], "error_statu": 4, "bool": [4, 5, 6, 8, 12], "dictionari": [5, 6, 12], "via": [5, 7, 12], "encod": [5, 8, 12], "tree": 5, "inner": 5, "node": 5, "leaf": 5, "repres": [5, 6], "kei": [5, 6, 7, 8, 12, 13], "configdump": [5, 13], "stream": 5, "default_styl": 5, "default_flow_styl": 5, "canon": 5, "indent": 5, "width": 5, "allow_unicod": 5, "line_break": 5, "explicit_start": 5, "explicit_end": 5, "sort_kei": 5, "safedump": 5, "pollut": 5, "yaml": 5, "namespac": [5, 6], "our": [5, 6, 8], "modif": 5, "yaml_implicit_resolv": [5, 13], "org": 5, "2002": 5, "null": 5, "n": 5, "float": 5, "9_": 5, "ee": 5, "5": [5, 13], "int": 5, "0b": 5, "1_": 5, "7_": 5, "0x": 5, "9a": 5, "fa": 5, "f_": 5, "timestamp": 5, "tt": 5, "t": [5, 12, 13], "4": [5, 13], "6": [5, 6, 7, 13], "merg": 5, "f": [5, 8], "ye": 5, "NO": 5, "On": 5, "ON": 5, "off": [5, 6], "o": 5, "y": 5, "uuid": 5, "b": 5, "f0": 5, "12": [5, 13], "yaml_represent": [5, 13], "nonetyp": 5, "saferepresent": 5, "represent_non": 5, "configpath": [5, 13], "path_represent": [5, 13], "represent_bool": 5, "byte": 5, "represent_binari": 5, "datetim": 5, "date": 5, "represent_d": 5, "represent_datetim": 5, "dict": [5, 6, 12], "represent_dict": 5, "represent_float": 5, "represent_int": 5, "represent_list": 5, "represent_set": 5, "represent_str": 5, "uuid_represent": [5, 13], "represent_undefin": 5, "configload": [5, 13], "csafeload": 5, "yaml_constructor": [5, 13], "path_constructor": [5, 13], "uuid_constructor": [5, 13], "safeconstructor": 5, "construct_yaml_binari": 5, "construct_yaml_bool": 5, "construct_yaml_float": 5, "construct_yaml_int": 5, "construct_yaml_map": 5, "construct_yaml_nul": 5, "omap": 5, "construct_yaml_omap": 5, "pair": [5, 6], "construct_yaml_pair": 5, "seq": 5, "construct_yaml_seq": 5, "construct_yaml_set": 5, "construct_yaml_str": 5, "construct_yaml_timestamp": 5, "construct_undefin": 5, "compon": [5, 6, 8, 12], "wrapper": [5, 8, 12], "around": [5, 12], "path_to_str": [5, 13], "parent_kei": 5, "parent": 5, "init": 5, "index": [5, 8, 12, 13], "data": 5, "serv": [5, 12], "throughout": 5, "subtre": 5, "automat": [5, 6, 8], "cfg": [5, 6], "build_dir": [5, 6, 13], "becom": 5, "bb_build_dir": 5, "llvm": 5, "dir": [5, 12], "bb_llvm_dir": 5, "filter_export": [5, 13], "has_default": [5, 13], "has_valu": [5, 13], "init_from_env": [5, 13], "comput": 5, "otherwis": [5, 6], "children": 5, "is_leaf": [5, 13], "_from": 5, "config_fil": 5, "to_env_dict": [5, 13], "flat": 5, "invalidconfigkei": [5, 13], "runtimewarn": 5, "non": 5, "available_cpu_count": [5, 13], "get": [5, 6, 7, 13], "cpu": 5, "virtual": [5, 6, 7, 12], "physic": 5, "system": [5, 6, 7, 12], "real": 5, "optim": 5, "scale": 5, "userspac": 5, "program": [5, 12], "avaial": 5, "convert_compon": [5, 13], "current_available_thread": [5, 13], "current": [5, 6, 8, 12], "thread": 5, "bb": 5, "escape_yaml": [5, 13], "raw_str": 5, "shell": [5, 6, 13], "escap": 5, "input": [5, 6, 12], "unescap": 5, "find_config": [5, 13], "test_fil": 5, "look": [5, 8, 12], "start": [5, 6, 13], "recurs": 5, "until": 5, "absolut": [5, 6, 8], "anyth": [5, 6], "localpath": [5, 12], "get_number_of_job": [5, 13], "is_yaml": [5, 13], "cfg_file": 5, "loader": 5, "form": [5, 12], "dumper": 5, "setup_config": [5, 13], "config_filenam": 5, "env_var_nam": 5, "_not_": 5, "preced": 5, "right": [5, 7, 8, 13], "now": [5, 6, 7, 8], "refus": 5, "alreadi": [5, 6], "filenam": [5, 6], "hold": [5, 8], "to_env_var": [5, 13], "env_var": 5, "compat": [5, 8], "to_yaml": [5, 13], "update_env": [5, 6, 13], "upgrad": [5, 13], "forward": [5, 8], "uuid_add_implicit_resolv": [5, 13], "attach": 5, "implicit": [5, 12], "pattern": 5, "resolv": [5, 8], "want": [6, 7], "simpli": 6, "select": [6, 12], "raw": 6, "linpack": 6, "stage": 6, "necessari": [6, 7, 12], "know": [6, 13], "how": 6, "few": [6, 7], "These": [6, 8], "bring": 6, "For": [6, 8], "relev": 6, "rebuild": 6, "uncondition": 6, "bb_container_export": 6, "By": 6, "Will": 6, "bb_container_import": 6, "bb_container_from_sourc": 6, "pip": [6, 7], "bb_container_root": 6, "subuid": 6, "gid": 6, "nf": 6, "lib": 6, "bb_container_runroot": 6, "temporari": 6, "restrict": 6, "bb_container_runtim": 6, "oci": [6, 7], "launch": 6, "crun": 6, "been": [6, 8, 12], "usr": 6, "bin": [6, 7, 8], "bb_container_mount": 6, "With": 6, "arbitrari": [6, 12], "containerimag": [6, 13], "testproject": 6, "from_": [6, 13], "dockerfil": 6, "beforehand": 6, "formul": 6, "backend": 6, "19": 6, "hand": 6, "rootless": 6, "daemon": 6, "subordin": 6, "uid": 6, "permiss": 6, "pleas": 6, "refer": [6, 8, 12], "uchroot": [6, 7], "strategi": [6, 8, 13], "appli": 6, "them": 6, "fix": [6, 13], "space": [6, 7], "bashstrategi": [6, 13], "containerstrategi": [6, 13], "applic": 6, "tmpdir": 6, "input_fil": [6, 13], "_contain": 6, "me": 6, "super": 6, "mount": [6, 13], "user_mount": 6, "save": 6, "output_fil": [6, 13], "write": 6, "chroot": 6, "custom_shel": 6, "containerbootstrap": [6, 13], "install_cmake_and_exit": [6, 13], "tell": 6, "cmake": 6, "abort": 6, "containercr": [6, 13], "predefin": 6, "offer": [6, 8, 12], "varieti": 6, "polici": 6, "leav": [6, 8], "extract": 6, "exit": 6, "pack": 6, "containerlist": [6, 13], "known": [6, 8], "containerrun": [6, 13], "commannd": 6, "prebuilt": 6, "chosen": 6, "mockobj": [6, 13], "setuppolyjitgentoostrategi": [6, 13], "gentoo": 6, "suitabl": 6, "polyjit": 6, "clean_directori": [6, 13], "in_dir": 6, "out_dir": 6, "confirm": 6, "find_hash": [6, 13], "container_db": 6, "entri": 6, "pack_contain": [6, 13], "in_contain": 6, "out_fil": 6, "tar": [6, 12], "bz2": 6, "run_in_contain": [6, 13], "container_dir": 6, "tri": [6, 7], "set_input_contain": [6, 13], "setup_bash_in_contain": [6, 13], "outfil": 6, "which": [6, 7], "also": 6, "afterward": 6, "setup_contain": [6, 13], "setup_directori": [6, 13], "container": 6, "give": 6, "full": 6, "concept": 6, "mai": [6, 12], "apk": 6, "iter": [6, 12], "tgt": 6, "syntax": 6, "cmd": [6, 8, 12], "artifact": [6, 8], "copy_": [6, 13], "base_imag": 6, "specifi": [6, 8, 12], "addit": [6, 8], "workingdir": [6, 13], "cwd": 6, "add_benchbuild_lay": [6, 13], "depen": 6, "either": 6, "mirror": 6, "complet": [6, 12], "bind": 6, "addlay": [6, 13], "destin": [6, 13], "container_id": [6, 13], "_noth": 6, "contextlay": [6, 13], "copylay": [6, 13], "layer_index": [6, 13], "append": [6, 13], "is_complet": [6, 13], "is_pres": [6, 13], "layerst": [6, 13], "present": [6, 13], "sens": [6, 12], "thei": [6, 7], "lead": 6, "statement": 6, "enum": 6, "absent": [6, 13], "runlay": [6, 13], "setcommand": [6, 13], "updateenv": [6, 13], "workingdirectori": [6, 13], "immutable_kwarg": [6, 13], "createbenchbuildbas": [6, 13], "createimag": [6, 13], "deleteimag": [6, 13], "exportimag": [6, 13], "out_nam": [6, 13], "importimag": [6, 13], "in_path": [6, 13], "fs_compliant_nam": [6, 13], "oci_compliant_nam": [6, 13], "compliant": 6, "foo": [6, 8], "instruct": 7, "against": 7, "ubuntu": 7, "20": 7, "04": [7, 13], "particular": 7, "below": 7, "alwai": [7, 8], "mandatori": 7, "minimum": 7, "note": 7, "libpq": 7, "psycopg2": 7, "libfus": 7, "llnl": 7, "18": 7, "08": [7, 13], "librari": 7, "becaus": 7, "featur": [7, 8, 13], "intern": 7, "plan": 7, "rid": 7, "futur": 7, "often": 7, "conjunct": 7, "legaci": 7, "soon": 7, "stabl": 7, "As": 7, "altern": 7, "machin": 7, "srun": 7, "signal": 7, "expect": 7, "batch": 7, "releas": 7, "isol": 7, "rest": 7, "virtualenv": 7, "ppython3": 7, "venv_path": 7, "pip3": 7, "carri": [8, 12], "paramt": 8, "dynam": 8, "besid": 8, "behav": 8, "ident": 8, "let": 8, "sourceroot": [8, 13], "myproject": 8, "com": 8, "refspec": [8, 12], "head": [8, 12], "compress": [8, 12], "myprj": 8, "here": [8, 12], "belong": 8, "concret": 8, "One": 8, "abov": 8, "author": 8, "argsrenderstrategi": [8, 13], "unrend": [8, 13], "argstoken": [8, 13], "classmethod": 8, "make_token": [8, 13], "pathlib": 8, "pathrenderstrategi": [8, 13], "backupfn": [8, 13], "builddirrender": [8, 13], "logg": 8, "output_param": [8, 13], "includ": 8, "base_c": 8, "env_c": 8, "bb_env_test": 8, "args_c": 8, "arg1": 8, "arg2": 8, "tmp": 8, "as_plumbum": [8, 13], "boundenvcommand": 8, "dirnam": [8, 13], "rendered_arg": [8, 13], "conststrrender": [8, 13], "constant": 8, "rev_rang": [8, 13], "workload_set": [8, 13], "fill": 8, "rang": 8, "unwrap": [8, 13], "iff": 8, "revisionrang": 8, "substitut": 8, "similar": 8, "projectcommand": [8, 13], "associ": [8, 12], "runtim": [8, 13], "subdirectori": 8, "rel": 8, "try": 8, "confin": 8, "runtime_extens": 8, "projectroot": [8, 13], "prunefn": [8, 13], "restorefn": [8, 13], "restor": 8, "local_nam": 8, "sourcerootrender": [8, 12, 13], "concaten": 8, "ensur": 8, "immut": 8, "usabl": 8, "composit": [8, 12], "union": 8, "therefor": 8, "compar": 8, "insert": 8, "project_command": 8, "_default_backup": 8, "_default_restor": 8, "_default_prun": 8, "contextmanag": 8, "back": [8, 12], "filter_workload_index": [8, 13], "yield": 8, "project_root": [8, 13], "source_root": [8, 12, 13], "empti": 8, "boolean": 8, "evalu": [8, 12], "mutablemap": 8, "download": 12, "basesourc": [12, 13], "contextawaresourc": [12, 13], "is_context_fre": [12, 13], "versions_with_context": [12, 13], "ctx": 12, "augment": 12, "everi": 12, "contextenumeratorfn": [12, 13], "contextfreemixin": [12, 13], "enumeratorfn": [12, 13], "expans": 12, "treat": 12, "would": 12, "fetchabl": [12, 13], "identif": 12, "guarante": 12, "uniqu": 12, "among": 12, "while": 12, "further": 12, "assumpt": 12, "good": 12, "candid": 12, "subclass": 12, "block": 12, "opt": 12, "anywai": 12, "target_dir": 12, "request": 12, "place": 12, "nosourc": [12, 13], "_primari": 12, "captur": 12, "submodul": 12, "extend": [12, 13], "has_vari": [12, 13], "primari": [12, 13], "source_by_nam": [12, 13], "keyerror": 12, "variant_by_nam": [12, 13], "owner": [12, 13], "somewher": 12, "In": 12, "term": 12, "semant": 12, "origin": 12, "configuraiton": 12, "context_free_enumer": 12, "_default_enumer": 12, "context_aware_enumer": 12, "_default_caw_enumer": 12, "two": 12, "phase": 12, "sourcet": 12, "product": [12, 13], "cross": 12, "revision_from_str": [12, 13], "rev": 12, "equival": 12, "hash": 12, "secondari": [12, 13], "complement": 12, "sources_as_dict": [12, 13], "target_prefix": [12, 13], "prefix": 12, "to_str": [12, 13], "join": 12, "10": [12, 13], "shallow": 12, "version_filt": 12, "lambda": 12, "worktre": 12, "live": 12, "desir": 12, "gitsubmodul": [12, 13], "particip": 12, "clone_need": [12, 13], "repo_loc": 12, "maybe_shallow": [12, 13], "condition": 12, "doesn": [12, 13], "fetch_vers": [12, 13], "pull": 12, "httpmultipl": [12, 13], "httpuntar": [12, 13], "unpack": 12, "gnu": 12, "rtype": 12, "gz": 12, "content": 12, "download_requir": [12, 13], "target_path": 12, "download_single_vers": [12, 13], "url": 12, "normalize_remot": [12, 13], "versioned_target_nam": [12, 13], "target_nam": 12, "design": 13, "philosophi": 13, "studi": 13, "postgresql": 13, "fuse": 13, "bootstrap": 13, "domain": 13, "model": 13, "makebuilddir": 13, "echo": 13, "requireal": 13, "rsync": 13, "2023": 13, "09": 13, "bug": 13, "changelog": 13, "03": 13, "16": 13, "06": 13, "01": 13, "2022": 13, "11": 13, "feat": 13, "refactor": 13, "21": 13, "02": 13, "2021": 13, "15": 13, "26": 13, "07": 13, "29": 13, "05": 13, "2020": 13, "search": 13, "page": 13}, "objects": {"benchbuild": [[8, 0, 0, "-", "command"], [6, 0, 0, "-", "container"], [5, 0, 0, "-", "settings"], [12, 0, 0, "-", "source"]], "benchbuild.command": [[8, 1, 1, "", "ArgsRenderStrategy"], [8, 1, 1, "", "ArgsToken"], [8, 1, 1, "", "BackupFn"], [8, 1, 1, "", "BuilddirRenderer"], [8, 1, 1, "", "Command"], [8, 1, 1, "", "ConstStrRenderer"], [8, 1, 1, "", "OnlyIn"], [8, 1, 1, "", "PathRenderStrategy"], [8, 1, 1, "", "PathToken"], [8, 1, 1, "", "ProjectCommand"], [8, 5, 1, "", "ProjectRoot"], [8, 1, 1, "", "PruneFn"], [8, 1, 1, "", "RestoreFn"], [8, 1, 1, "", "RootRenderer"], [8, 5, 1, "", "SourceRoot"], [8, 1, 1, "", "SourceRootRenderer"], [8, 1, 1, "", "SupportsUnwrap"], [8, 1, 1, "", "WorkloadSet"], [8, 5, 1, "", "cleanup"], [8, 5, 1, "", "filter_workload_index"], [8, 5, 1, "", "project_root"], [8, 5, 1, "", "source_root"], [8, 5, 1, "", "unwrap"]], "benchbuild.command.ArgsRenderStrategy": [[8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"]], "benchbuild.command.ArgsToken": [[8, 2, 1, "", "make_token"], [8, 2, 1, "", "render"], [8, 4, 1, "", "renderer"]], "benchbuild.command.BuilddirRenderer": [[8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"]], "benchbuild.command.Command": [[8, 2, 1, "", "as_plumbum"], [8, 3, 1, "id0", "consumes"], [8, 3, 1, "id1", "creates"], [8, 3, 1, "", "dirname"], [8, 2, 1, "", "env"], [8, 3, 1, "id2", "label"], [8, 3, 1, "", "name"], [8, 3, 1, "id3", "output"], [8, 4, 1, "", "output_param"], [8, 3, 1, "id4", "path"], [8, 2, 1, "", "rendered_args"]], "benchbuild.command.ConstStrRenderer": [[8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"], [8, 4, 1, "", "value"]], "benchbuild.command.OnlyIn": [[8, 4, 1, "", "rev_range"], [8, 2, 1, "", "unwrap"], [8, 4, 1, "", "workload_set"]], "benchbuild.command.PathRenderStrategy": [[8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"]], "benchbuild.command.PathToken": [[8, 3, 1, "", "dirname"], [8, 2, 1, "", "exists"], [8, 4, 1, "", "left"], [8, 2, 1, "", "make_token"], [8, 3, 1, "", "name"], [8, 2, 1, "", "render"], [8, 4, 1, "", "renderer"], [8, 4, 1, "", "right"]], "benchbuild.command.ProjectCommand": [[8, 4, 1, "", "command"], [8, 3, 1, "", "path"], [8, 4, 1, "", "project"]], "benchbuild.command.RootRenderer": [[8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"]], "benchbuild.command.SourceRootRenderer": [[8, 4, 1, "", "local"], [8, 2, 1, "", "rendered"], [8, 3, 1, "", "unrendered"]], "benchbuild.command.SupportsUnwrap": [[8, 2, 1, "", "unwrap"]], "benchbuild.command.WorkloadSet": [[8, 2, 1, "", "unwrap"]], "benchbuild.container": [[6, 1, 1, "", "BashStrategy"], [6, 1, 1, "", "Container"], [6, 1, 1, "", "ContainerBootstrap"], [6, 1, 1, "", "ContainerCreate"], [6, 1, 1, "", "ContainerList"], [6, 1, 1, "", "ContainerRun"], [6, 1, 1, "", "ContainerStrategy"], [6, 1, 1, "", "MockObj"], [6, 1, 1, "", "SetupPolyJITGentooStrategy"], [6, 5, 1, "", "clean_directories"], [6, 5, 1, "", "find_hash"], [6, 5, 1, "", "main"], [6, 5, 1, "", "pack_container"], [6, 5, 1, "", "run_in_container"], [6, 5, 1, "", "set_input_container"], [6, 5, 1, "", "setup_bash_in_container"], [6, 5, 1, "", "setup_container"], [6, 5, 1, "", "setup_directories"]], "benchbuild.container.BashStrategy": [[6, 2, 1, "", "run"]], "benchbuild.container.Container": [[6, 4, 1, "", "VERSION"], [6, 2, 1, "", "builddir"], [6, 2, 1, "", "input_file"], [6, 2, 1, "", "main"], [6, 2, 1, "", "mounts"], [6, 2, 1, "", "output_file"], [6, 2, 1, "", "shell"], [6, 4, 1, "", "verbosity"]], "benchbuild.container.ContainerBootstrap": [[6, 2, 1, "", "install_cmake_and_exit"], [6, 2, 1, "", "main"]], "benchbuild.container.ContainerCreate": [[6, 2, 1, "", "main"], [6, 2, 1, "", "strategy"]], "benchbuild.container.ContainerList": [[6, 2, 1, "", "main"]], "benchbuild.container.ContainerRun": [[6, 2, 1, "", "main"]], "benchbuild.container.ContainerStrategy": [[6, 2, 1, "", "run"]], "benchbuild.container.SetupPolyJITGentooStrategy": [[6, 2, 1, "", "run"]], "benchbuild.environments.domain": [[6, 0, 0, "-", "commands"], [6, 0, 0, "-", "declarative"], [6, 0, 0, "-", "model"]], "benchbuild.environments.domain.commands": [[6, 1, 1, "", "CreateBenchbuildBase"], [6, 1, 1, "", "CreateImage"], [6, 1, 1, "", "DeleteImage"], [6, 1, 1, "", "ExportImage"], [6, 1, 1, "", "ImportImage"], [6, 1, 1, "", "RunProjectContainer"], [6, 5, 1, "", "fs_compliant_name"], [6, 5, 1, "", "oci_compliant_name"]], "benchbuild.environments.domain.commands.CreateBenchbuildBase": [[6, 4, 1, "", "layers"], [6, 4, 1, "", "name"]], "benchbuild.environments.domain.commands.CreateImage": [[6, 4, 1, "", "layers"], [6, 4, 1, "", "name"]], "benchbuild.environments.domain.commands.DeleteImage": [[6, 4, 1, "", "name"]], "benchbuild.environments.domain.commands.ExportImage": [[6, 4, 1, "", "image"], [6, 4, 1, "", "out_name"]], "benchbuild.environments.domain.commands.ImportImage": [[6, 4, 1, "", "image"], [6, 4, 1, "", "in_path"]], "benchbuild.environments.domain.commands.RunProjectContainer": [[6, 4, 1, "", "args"], [6, 4, 1, "", "build_dir"], [6, 4, 1, "", "image"], [6, 4, 1, "", "name"]], "benchbuild.environments.domain.declarative": [[6, 1, 1, "", "ContainerImage"], [6, 5, 1, "", "add_benchbuild_layers"]], "benchbuild.environments.domain.declarative.ContainerImage": [[6, 2, 1, "", "add"], [6, 3, 1, "", "base"], [6, 2, 1, "", "command"], [6, 2, 1, "", "context"], [6, 2, 1, "", "copy_"], [6, 2, 1, "", "entrypoint"], [6, 2, 1, "", "env"], [6, 2, 1, "", "from_"], [6, 2, 1, "", "run"], [6, 2, 1, "", "workingdir"]], "benchbuild.environments.domain.model": [[6, 1, 1, "", "AddLayer"], [6, 1, 1, "", "Command"], [6, 1, 1, "", "Container"], [6, 1, 1, "", "ContextLayer"], [6, 1, 1, "", "CopyLayer"], [6, 1, 1, "", "EntryPoint"], [6, 1, 1, "", "Event"], [6, 1, 1, "", "FromLayer"], [6, 1, 1, "", "Image"], [6, 1, 1, "", "Layer"], [6, 1, 1, "", "LayerState"], [6, 1, 1, "", "Message"], [6, 1, 1, "", "Mount"], [6, 1, 1, "", "RunLayer"], [6, 1, 1, "", "SetCommand"], [6, 1, 1, "", "UpdateEnv"], [6, 1, 1, "", "WorkingDirectory"], [6, 5, 1, "", "immutable_kwargs"]], "benchbuild.environments.domain.model.AddLayer": [[6, 4, 1, "", "destination"], [6, 4, 1, "", "sources"]], "benchbuild.environments.domain.model.Container": [[6, 4, 1, "", "container_id"], [6, 4, 1, "", "context"], [6, 4, 1, "", "events"], [6, 4, 1, "", "image"], [6, 4, 1, "", "name"]], "benchbuild.environments.domain.model.ContextLayer": [[6, 4, 1, "", "func"]], "benchbuild.environments.domain.model.CopyLayer": [[6, 4, 1, "", "destination"], [6, 4, 1, "", "sources"]], "benchbuild.environments.domain.model.EntryPoint": [[6, 4, 1, "", "command"]], "benchbuild.environments.domain.model.FromLayer": [[6, 4, 1, "", "base"]], "benchbuild.environments.domain.model.Image": [[6, 2, 1, "", "append"], [6, 4, 1, "", "env"], [6, 4, 1, "", "events"], [6, 4, 1, "", "from_"], [6, 2, 1, "", "is_complete"], [6, 2, 1, "", "is_present"], [6, 4, 1, "", "layer_index"], [6, 4, 1, "", "layers"], [6, 4, 1, "", "mounts"], [6, 4, 1, "", "name"], [6, 2, 1, "", "prepend"], [6, 2, 1, "", "present"], [6, 2, 1, "", "update_env"]], "benchbuild.environments.domain.model.LayerState": [[6, 4, 1, "", "ABSENT"], [6, 4, 1, "", "PRESENT"]], "benchbuild.environments.domain.model.Mount": [[6, 4, 1, "", "source"], [6, 4, 1, "", "target"]], "benchbuild.environments.domain.model.RunLayer": [[6, 4, 1, "", "args"], [6, 4, 1, "", "command"], [6, 4, 1, "", "kwargs"]], "benchbuild.environments.domain.model.SetCommand": [[6, 4, 1, "", "command"]], "benchbuild.environments.domain.model.UpdateEnv": [[6, 4, 1, "", "env"]], "benchbuild.environments.domain.model.WorkingDirectory": [[6, 4, 1, "", "directory"]], "benchbuild.source": [[12, 0, 0, "-", "base"], [12, 0, 0, "-", "git"], [12, 0, 0, "-", "http"], [12, 0, 0, "-", "rsync"]], "benchbuild.source.base": [[12, 1, 1, "", "BaseSource"], [12, 1, 1, "", "ContextAwareSource"], [12, 1, 1, "", "ContextEnumeratorFn"], [12, 1, 1, "", "ContextFreeMixin"], [12, 1, 1, "", "EnumeratorFn"], [12, 1, 1, "", "Expandable"], [12, 1, 1, "", "Fetchable"], [12, 1, 1, "", "FetchableSource"], [12, 1, 1, "", "NoSource"], [12, 1, 1, "", "Revision"], [12, 1, 1, "", "RevisionStr"], [12, 1, 1, "", "Variant"], [12, 1, 1, "", "Versioned"], [12, 5, 1, "", "enumerate_revisions"], [12, 5, 1, "", "nosource"], [12, 5, 1, "", "primary"], [12, 5, 1, "", "product"], [12, 5, 1, "", "revision_from_str"], [12, 5, 1, "", "secondaries"], [12, 5, 1, "", "sources_as_dict"], [12, 5, 1, "", "target_prefix"], [12, 5, 1, "", "to_str"]], "benchbuild.source.base.ContextAwareSource": [[12, 2, 1, "", "is_context_free"], [12, 2, 1, "", "versions_with_context"]], "benchbuild.source.base.ContextFreeMixin": [[12, 2, 1, "", "is_context_free"], [12, 2, 1, "", "versions_with_context"]], "benchbuild.source.base.Expandable": [[12, 3, 1, "", "is_expandable"], [12, 2, 1, "", "versions"]], "benchbuild.source.base.Fetchable": [[12, 2, 1, "", "fetch"], [12, 3, 1, "", "key"], [12, 3, 1, "", "local"], [12, 3, 1, "", "remote"]], "benchbuild.source.base.FetchableSource": [[12, 3, 1, "", "default"], [12, 2, 1, "", "explore"], [12, 2, 1, "", "fetch"], [12, 3, 1, "", "is_expandable"], [12, 3, 1, "", "key"], [12, 3, 1, "", "local"], [12, 3, 1, "", "remote"], [12, 2, 1, "", "version"], [12, 2, 1, "", "versions"]], "benchbuild.source.base.NoSource": [[12, 3, 1, "", "default"], [12, 2, 1, "", "fetch"], [12, 2, 1, "", "version"], [12, 2, 1, "", "versions"]], "benchbuild.source.base.Revision": [[12, 2, 1, "", "extend"], [12, 2, 1, "", "has_variant"], [12, 3, 1, "", "primary"], [12, 4, 1, "", "project_cls"], [12, 2, 1, "", "sorted"], [12, 2, 1, "", "source_by_name"], [12, 2, 1, "", "update"], [12, 2, 1, "", "variant_by_name"], [12, 4, 1, "", "variants"]], "benchbuild.source.base.RevisionStr": [[12, 4, 1, "", "value"]], "benchbuild.source.base.Variant": [[12, 2, 1, "", "name"], [12, 4, 1, "", "owner"], [12, 2, 1, "", "source"], [12, 4, 1, "", "version"]], "benchbuild.source.base.Versioned": [[12, 3, 1, "", "default"], [12, 2, 1, "", "version"], [12, 2, 1, "", "versions"]], "benchbuild.source.git": [[12, 1, 1, "", "Git"], [12, 1, 1, "", "GitSubmodule"], [12, 5, 1, "", "clone_needed"], [12, 5, 1, "", "maybe_shallow"]], "benchbuild.source.git.Git": [[12, 3, 1, "", "default"], [12, 2, 1, "", "fetch"], [12, 2, 1, "", "version"], [12, 2, 1, "", "versions"]], "benchbuild.source.git.GitSubmodule": [[12, 3, 1, "", "is_expandable"]], "benchbuild.source.http": [[12, 1, 1, "", "HTTP"], [12, 1, 1, "", "HTTPMultiple"], [12, 1, 1, "", "HTTPUntar"], [12, 5, 1, "", "download_required"], [12, 5, 1, "", "download_single_version"], [12, 5, 1, "", "normalize_remotes"], [12, 5, 1, "", "versioned_target_name"]], "benchbuild.source.http.HTTP": [[12, 3, 1, "", "default"], [12, 2, 1, "", "fetch"], [12, 2, 1, "", "fetch_version"], [12, 2, 1, "", "version"], [12, 2, 1, "", "versions"]], "benchbuild.source.http.HTTPMultiple": [[12, 2, 1, "", "fetch_version"]], "benchbuild.source.http.HTTPUntar": [[12, 2, 1, "", "version"]], "benchbuild.utils": [[4, 0, 0, "-", "actions"], [5, 0, 0, "-", "settings"]], "benchbuild.utils.actions": [[4, 1, 1, "", "Any"], [4, 1, 1, "", "Clean"], [4, 1, 1, "", "CleanExtra"], [4, 1, 1, "", "Compile"], [4, 1, 1, "", "Echo"], [4, 1, 1, "", "Experiment"], [4, 1, 1, "", "MakeBuildDir"], [4, 1, 1, "", "MultiStep"], [4, 1, 1, "", "ProjectEnvironment"], [4, 1, 1, "", "ProjectStep"], [4, 1, 1, "", "RequireAll"], [4, 1, 1, "", "Run"], [4, 1, 1, "", "RunWorkload"], [4, 1, 1, "", "RunWorkloads"], [4, 1, 1, "", "SetProjectVersion"], [4, 1, 1, "", "Step"], [4, 1, 1, "", "StepResult"], [4, 5, 1, "", "log_before_after"], [4, 5, 1, "", "prepend_status"], [4, 5, 1, "", "run_any_child"], [4, 5, 1, "", "step_has_failed"]], "benchbuild.utils.actions.Any": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.Clean": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 2, 1, "", "clean_mountpoints"]], "benchbuild.utils.actions.CleanExtra": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.Compile": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.Echo": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 4, 1, "", "message"]], "benchbuild.utils.actions.Experiment": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 2, 1, "", "begin_transaction"], [4, 2, 1, "", "end_transaction"], [4, 4, 1, "", "experiment"]], "benchbuild.utils.actions.MakeBuildDir": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.MultiStep": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 4, 1, "", "actions"], [4, 2, 1, "", "onerror"]], "benchbuild.utils.actions.ProjectEnvironment": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.ProjectStep": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 2, 1, "", "onerror"], [4, 4, 1, "", "project"]], "benchbuild.utils.actions.RequireAll": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"]], "benchbuild.utils.actions.Run": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 4, 1, "", "experiment"]], "benchbuild.utils.actions.RunWorkload": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 3, 1, "", "workload_ref"]], "benchbuild.utils.actions.RunWorkloads": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 4, 1, "", "experiment"], [4, 4, 1, "", "project"]], "benchbuild.utils.actions.SetProjectVersion": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 4, 1, "", "revision"]], "benchbuild.utils.actions.Step": [[4, 4, 1, "", "DESCRIPTION"], [4, 4, 1, "", "NAME"], [4, 2, 1, "", "onerror"], [4, 4, 1, "", "status"]], "benchbuild.utils.actions.StepResult": [[4, 4, 1, "", "CAN_CONTINUE"], [4, 4, 1, "", "ERROR"], [4, 4, 1, "", "OK"], [4, 4, 1, "", "UNSET"]], "benchbuild.utils.settings": [[5, 1, 1, "", "ConfigDumper"], [5, 1, 1, "", "ConfigLoader"], [5, 1, 1, "", "ConfigPath"], [5, 1, 1, "", "Configuration"], [5, 1, 1, "", "Indexable"], [5, 6, 1, "", "InvalidConfigKey"], [5, 5, 1, "", "available_cpu_count"], [5, 5, 1, "", "convert_components"], [5, 5, 1, "", "current_available_threads"], [5, 5, 1, "", "escape_yaml"], [5, 5, 1, "", "find_config"], [5, 5, 1, "", "get_number_of_jobs"], [5, 5, 1, "", "is_yaml"], [5, 5, 1, "", "path_constructor"], [5, 5, 1, "", "path_representer"], [5, 5, 1, "", "setup_config"], [5, 5, 1, "", "to_env_var"], [5, 5, 1, "", "to_yaml"], [5, 5, 1, "", "update_env"], [5, 5, 1, "", "upgrade"], [5, 5, 1, "", "uuid_add_implicit_resolver"], [5, 5, 1, "", "uuid_constructor"], [5, 5, 1, "", "uuid_representer"]], "benchbuild.utils.settings.ConfigDumper": [[5, 4, 1, "", "yaml_implicit_resolvers"], [5, 4, 1, "", "yaml_representers"]], "benchbuild.utils.settings.ConfigLoader": [[5, 4, 1, "", "yaml_constructors"], [5, 4, 1, "", "yaml_implicit_resolvers"]], "benchbuild.utils.settings.ConfigPath": [[5, 2, 1, "", "path_to_str"], [5, 2, 1, "", "validate"]], "benchbuild.utils.settings.Configuration": [[5, 2, 1, "", "filter_exports"], [5, 2, 1, "", "has_default"], [5, 2, 1, "", "has_value"], [5, 2, 1, "", "init_from_env"], [5, 2, 1, "", "is_leaf"], [5, 2, 1, "", "load"], [5, 2, 1, "", "store"], [5, 2, 1, "", "to_env_dict"], [5, 3, 1, "", "value"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"6": 0, "8": 0, "2023": 0, "10": 0, "09": 0, "featur": 0, "bug": 0, "fix": 0, "7": 0, "04": 0, "changelog": 0, "4": 0, "03": 0, "16": 0, "3": 0, "06": 0, "2": 0, "1": 0, "01": 0, "5": 0, "2022": 0, "11": 0, "feat": 0, "refactor": 0, "21": 0, "08": 0, "02": 0, "2021": 0, "15": 0, "26": 0, "07": 0, "29": 0, "05": 0, "0": 0, "2020": 0, "12": 0, "benchbuild": [1, 6, 7], "document": [1, 13], "design": 1, "philosophi": 1, "A": 1, "case": 1, "studi": 1, "doesn": 1, "t": 1, "know": 1, "its": 1, "experi": [1, 4, 10], "an": 1, "support": 1, "python": 1, "version": 1, "get": 1, "start": 1, "cli": 2, "slurm": [3, 7], "basic": 3, "templat": 3, "custom": [3, 4], "action": 4, "avail": 4, "step": 4, "base": [4, 12], "clean": 4, "makebuilddir": 4, "compil": 4, "run": 4, "echo": 4, "ani": 4, "group": 4, "requireal": 4, "cleanextra": 4, "projectenviron": 4, "setprojectvers": 4, "configur": [5, 6], "modul": [5, 6, 8, 12], "set": 5, "util": 5, "contain": 6, "usag": [6, 8], "replac": 6, "imag": 6, "definit": 6, "runtim": 6, "requir": [6, 7], "buildah": 6, "podman": 6, "environ": [6, 9], "domain": 6, "declar": 6, "model": 6, "exampl": [6, 12], "command": [6, 8], "instal": 7, "postgresql": 7, "fuse": 7, "bootstrap": 7, "insid": 8, "project": [8, 11], "token": 8, "sourc": 12, "git": 12, "http": 12, "rsync": 12, "welcom": 13, "bencbuild": 13, "": 13, "content": 13, "indic": 13, "tabl": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"6.8 (2023-10-09)": [[0, "id1"]], "Features": [[0, "features"], [0, "id3"], [0, "id10"]], "Bug Fixes": [[0, "bug-fixes"], [0, "id4"], [0, "id8"], [0, "id11"]], "6.7 (2023-04-04)": [[0, "id2"]], "Changelog": [[0, "changelog"]], "6.6.4 (2023-03-16)": [[0, "id5"]], "6.6.3 (2023-03-06)": [[0, "id6"]], "6.6.2 (2023-03-06)": [[0, "id7"]], "6.6.1 (2023-01-10)": [[0, "id9"]], "6.5 (2022-11-03)": [[0, "id12"]], "Feat": [[0, "feat"], [0, "id14"], [0, "id18"], [0, "id22"], [0, "id26"], [0, "id33"], [0, "id39"], [0, "id46"]], "Fix": [[0, "fix"], [0, "id15"], [0, "id19"], [0, "id23"], [0, "id27"], [0, "id31"], [0, "id36"], [0, "id40"], [0, "id42"], [0, "id44"], [0, "id47"], [0, "id50"]], "Refactor": [[0, "refactor"], [0, "id16"], [0, "id20"], [0, "id24"], [0, "id28"], [0, "id48"]], "6.4 (2022-09-21)": [[0, "id13"]], "6.3.2 (2022-08-21)": [[0, "id17"]], "6.3.1 (2022-03-01)": [[0, "id21"]], "6.3 (2022-02-03)": [[0, "id25"]], "6.2.7 (2021-09-21)": [[0, "id29"]], "6.2.6 (2021-09-16)": [[0, "id30"]], "6.2.5 (2021-09-15)": [[0, "id32"]], "6.2.4 (2021-09-03)": [[0, "id34"]], "6.2.3 (2021-08-26)": [[0, "id35"]], "6.2.2 (2021-07-29)": [[0, "id37"]], "6.2.1 (2021-07-06)": [[0, "id38"]], "6.2 (2021-06-02)": [[0, "id41"]], "6.1.1 (2021-05-11)": [[0, "id43"]], "6.1 (2021-05-11)": [[0, "id45"]], "6.0.1 (2020-12-29)": [[0, "id49"]], "BenchBuild Documentation": [[1, "benchbuild-documentation"]], "Design Philosophy": [[1, "design-philosophy"]], "A case-study doesn\u2019t know its experiment": [[1, "a-case-study-doesn-t-know-its-experiment"]], "An experiment doesn\u2019t know its case-studies": [[1, "an-experiment-doesn-t-know-its-case-studies"]], "Supported Python Versions": [[1, "supported-python-versions"]], "Getting started": [[1, "getting-started"]], "CLI": [[2, "cli"]], "SLURM": [[3, "slurm"], [7, "slurm"]], "Basics": [[3, "basics"]], "Template customization": [[3, "template-customization"]], "Actions": [[4, "actions"]], "Customize actions": [[4, "customize-actions"]], "Available Actions": [[4, "available-actions"]], "Step (Base)": [[4, "step-base"]], "Clean": [[4, "clean"]], "MakeBuildDir": [[4, "makebuilddir"]], "Compile": [[4, "compile"]], "Run": [[4, "run"]], "Echo": [[4, "echo"]], "Any (Group)": [[4, "any-group"]], "Experiment (Any, Group)": [[4, "experiment-any-group"]], "RequireAll (Group)": [[4, "requireall-group"]], "CleanExtra": [[4, "cleanextra"]], "ProjectEnvironment": [[4, "projectenvironment"]], "SetProjectVersion": [[4, "setprojectversion"]], "Configure": [[5, "configure"]], "Module: settings": [[5, "module-benchbuild.settings"]], "Module: utils.settings": [[5, "module-benchbuild.utils.settings"]], "Containers": [[6, "containers"]], "Usage": [[6, "usage"]], "Replace Images": [[6, "replace-images"]], "Configuration": [[6, "configuration"]], "Definition": [[6, "definition"]], "Runtime requirements": [[6, "runtime-requirements"]], "Buildah": [[6, "buildah"]], "Podman": [[6, "podman"]], "Module: benchbuild.container": [[6, "module-benchbuild.container"]], "Module: benchbuild.environments.domain.declarative": [[6, "module-benchbuild.environments.domain.declarative"]], "Module: benchbuild.environments.domain.model": [[6, "module-benchbuild.environments.domain.model"]], "Examples": [[6, null], [6, null]], "Module: benchbuild.environments.domain.commands": [[6, "module-benchbuild.environments.domain.commands"]], "Installation": [[7, "installation"]], "Requirements": [[7, "requirements"]], "PostgreSQL": [[7, "postgresql"]], "FUSE": [[7, "fuse"]], "Benchbuild": [[7, "benchbuild"]], "Bootstrapping": [[7, "bootstrapping"]], "Commands": [[8, "commands"]], "Usage inside Projects": [[8, "usage-inside-projects"]], "Tokens": [[8, "tokens"]], "Module: command": [[8, "module-benchbuild.command"]], "Environment": [[9, "environment"]], "Experiment": [[10, "experiment"]], "Project": [[11, "project"]], "Source": [[12, "source"]], "Base": [[12, "module-benchbuild.source.base"]], "Git": [[12, "module-benchbuild.source.git"]], "HTTP": [[12, "module-benchbuild.source.http"]], "Example": [[12, null]], "RSync": [[12, "module-benchbuild.source.rsync"]], "Module: source": [[12, "module-benchbuild.source"]], "Welcome to bencbuild\u2019s documentation!": [[13, "welcome-to-bencbuild-s-documentation"]], "Contents:": [[13, null]], "Indices and tables": [[13, "indices-and-tables"]]}, "indexentries": {"any (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Any"]], "can_continue (benchbuild.utils.actions.stepresult attribute)": [[4, "benchbuild.utils.actions.StepResult.CAN_CONTINUE"]], "clean (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Clean"]], "cleanextra (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.CleanExtra"]], "compile (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Compile"]], "description (benchbuild.utils.actions.any attribute)": [[4, "benchbuild.utils.actions.Any.DESCRIPTION"]], "description (benchbuild.utils.actions.clean attribute)": [[4, "benchbuild.utils.actions.Clean.DESCRIPTION"]], "description (benchbuild.utils.actions.cleanextra attribute)": [[4, "benchbuild.utils.actions.CleanExtra.DESCRIPTION"]], "description (benchbuild.utils.actions.compile attribute)": [[4, "benchbuild.utils.actions.Compile.DESCRIPTION"]], "description (benchbuild.utils.actions.echo attribute)": [[4, "benchbuild.utils.actions.Echo.DESCRIPTION"]], "description (benchbuild.utils.actions.experiment attribute)": [[4, "benchbuild.utils.actions.Experiment.DESCRIPTION"]], "description (benchbuild.utils.actions.makebuilddir attribute)": [[4, "benchbuild.utils.actions.MakeBuildDir.DESCRIPTION"]], "description (benchbuild.utils.actions.multistep attribute)": [[4, "benchbuild.utils.actions.MultiStep.DESCRIPTION"]], "description (benchbuild.utils.actions.projectenvironment attribute)": [[4, "benchbuild.utils.actions.ProjectEnvironment.DESCRIPTION"]], "description (benchbuild.utils.actions.projectstep attribute)": [[4, "benchbuild.utils.actions.ProjectStep.DESCRIPTION"]], "description (benchbuild.utils.actions.requireall attribute)": [[4, "benchbuild.utils.actions.RequireAll.DESCRIPTION"]], "description (benchbuild.utils.actions.run attribute)": [[4, "benchbuild.utils.actions.Run.DESCRIPTION"]], "description (benchbuild.utils.actions.runworkload attribute)": [[4, "benchbuild.utils.actions.RunWorkload.DESCRIPTION"]], "description (benchbuild.utils.actions.runworkloads attribute)": [[4, "benchbuild.utils.actions.RunWorkloads.DESCRIPTION"]], "description (benchbuild.utils.actions.setprojectversion attribute)": [[4, "benchbuild.utils.actions.SetProjectVersion.DESCRIPTION"]], "description (benchbuild.utils.actions.step attribute)": [[4, "benchbuild.utils.actions.Step.DESCRIPTION"]], "error (benchbuild.utils.actions.stepresult attribute)": [[4, "benchbuild.utils.actions.StepResult.ERROR"]], "echo (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Echo"]], "experiment (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Experiment"]], "makebuilddir (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.MakeBuildDir"]], "multistep (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.MultiStep"]], "name (benchbuild.utils.actions.any attribute)": [[4, "benchbuild.utils.actions.Any.NAME"]], "name (benchbuild.utils.actions.clean attribute)": [[4, "benchbuild.utils.actions.Clean.NAME"]], "name (benchbuild.utils.actions.cleanextra attribute)": [[4, "benchbuild.utils.actions.CleanExtra.NAME"]], "name (benchbuild.utils.actions.compile attribute)": [[4, "benchbuild.utils.actions.Compile.NAME"]], "name (benchbuild.utils.actions.echo attribute)": [[4, "benchbuild.utils.actions.Echo.NAME"]], "name (benchbuild.utils.actions.experiment attribute)": [[4, "benchbuild.utils.actions.Experiment.NAME"]], "name (benchbuild.utils.actions.makebuilddir attribute)": [[4, "benchbuild.utils.actions.MakeBuildDir.NAME"]], "name (benchbuild.utils.actions.multistep attribute)": [[4, "benchbuild.utils.actions.MultiStep.NAME"]], "name (benchbuild.utils.actions.projectenvironment attribute)": [[4, "benchbuild.utils.actions.ProjectEnvironment.NAME"]], "name (benchbuild.utils.actions.projectstep attribute)": [[4, "benchbuild.utils.actions.ProjectStep.NAME"]], "name (benchbuild.utils.actions.requireall attribute)": [[4, "benchbuild.utils.actions.RequireAll.NAME"]], "name (benchbuild.utils.actions.run attribute)": [[4, "benchbuild.utils.actions.Run.NAME"]], "name (benchbuild.utils.actions.runworkload attribute)": [[4, "benchbuild.utils.actions.RunWorkload.NAME"]], "name (benchbuild.utils.actions.runworkloads attribute)": [[4, "benchbuild.utils.actions.RunWorkloads.NAME"]], "name (benchbuild.utils.actions.setprojectversion attribute)": [[4, "benchbuild.utils.actions.SetProjectVersion.NAME"]], "name (benchbuild.utils.actions.step attribute)": [[4, "benchbuild.utils.actions.Step.NAME"]], "ok (benchbuild.utils.actions.stepresult attribute)": [[4, "benchbuild.utils.actions.StepResult.OK"]], "projectenvironment (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.ProjectEnvironment"]], "projectstep (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.ProjectStep"]], "requireall (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.RequireAll"]], "run (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Run"]], "runworkload (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.RunWorkload"]], "runworkloads (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.RunWorkloads"]], "setprojectversion (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.SetProjectVersion"]], "step (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.Step"]], "stepresult (class in benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.StepResult"]], "unset (benchbuild.utils.actions.stepresult attribute)": [[4, "benchbuild.utils.actions.StepResult.UNSET"]], "actions (benchbuild.utils.actions.multistep attribute)": [[4, "benchbuild.utils.actions.MultiStep.actions"]], "begin_transaction() (benchbuild.utils.actions.experiment method)": [[4, "benchbuild.utils.actions.Experiment.begin_transaction"]], "benchbuild.utils.actions": [[4, "module-benchbuild.utils.actions"]], "clean_mountpoints() (benchbuild.utils.actions.clean static method)": [[4, "benchbuild.utils.actions.Clean.clean_mountpoints"]], "end_transaction() (benchbuild.utils.actions.experiment static method)": [[4, "benchbuild.utils.actions.Experiment.end_transaction"]], "experiment (benchbuild.utils.actions.experiment attribute)": [[4, "benchbuild.utils.actions.Experiment.experiment"]], "experiment (benchbuild.utils.actions.run attribute)": [[4, "benchbuild.utils.actions.Run.experiment"]], "experiment (benchbuild.utils.actions.runworkloads attribute)": [[4, "benchbuild.utils.actions.RunWorkloads.experiment"]], "log_before_after() (in module benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.log_before_after"]], "message (benchbuild.utils.actions.echo attribute)": [[4, "benchbuild.utils.actions.Echo.message"]], "module": [[4, "module-benchbuild.utils.actions"], [5, "module-benchbuild.settings"], [5, "module-benchbuild.utils.settings"], [6, "module-benchbuild.container"], [6, "module-benchbuild.environments.domain.commands"], [6, "module-benchbuild.environments.domain.declarative"], [6, "module-benchbuild.environments.domain.model"], [8, "module-benchbuild.command"], [12, "module-benchbuild.source"], [12, "module-benchbuild.source.base"], [12, "module-benchbuild.source.git"], [12, "module-benchbuild.source.http"], [12, "module-benchbuild.source.rsync"]], "onerror() (benchbuild.utils.actions.multistep method)": [[4, "benchbuild.utils.actions.MultiStep.onerror"]], "onerror() (benchbuild.utils.actions.projectstep method)": [[4, "benchbuild.utils.actions.ProjectStep.onerror"]], "onerror() (benchbuild.utils.actions.step method)": [[4, "benchbuild.utils.actions.Step.onerror"]], "prepend_status() (in module benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.prepend_status"]], "project (benchbuild.utils.actions.projectstep attribute)": [[4, "benchbuild.utils.actions.ProjectStep.project"]], "project (benchbuild.utils.actions.runworkloads attribute)": [[4, "benchbuild.utils.actions.RunWorkloads.project"]], "revision (benchbuild.utils.actions.setprojectversion attribute)": [[4, "benchbuild.utils.actions.SetProjectVersion.revision"]], "run_any_child() (in module benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.run_any_child"]], "status (benchbuild.utils.actions.step attribute)": [[4, "benchbuild.utils.actions.Step.status"]], "step_has_failed() (in module benchbuild.utils.actions)": [[4, "benchbuild.utils.actions.step_has_failed"]], "workload_ref (benchbuild.utils.actions.runworkload property)": [[4, "benchbuild.utils.actions.RunWorkload.workload_ref"]], "configdumper (class in benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.ConfigDumper"]], "configloader (class in benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.ConfigLoader"]], "configpath (class in benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.ConfigPath"]], "configuration (class in benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.Configuration"]], "indexable (class in benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.Indexable"]], "invalidconfigkey": [[5, "benchbuild.utils.settings.InvalidConfigKey"]], "available_cpu_count() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.available_cpu_count"]], "benchbuild.settings": [[5, "module-benchbuild.settings"]], "benchbuild.utils.settings": [[5, "module-benchbuild.utils.settings"]], "convert_components() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.convert_components"]], "current_available_threads() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.current_available_threads"]], "escape_yaml() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.escape_yaml"]], "filter_exports() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.filter_exports"]], "find_config() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.find_config"]], "get_number_of_jobs() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.get_number_of_jobs"]], "has_default() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.has_default"]], "has_value() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.has_value"]], "init_from_env() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.init_from_env"]], "is_leaf() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.is_leaf"]], "is_yaml() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.is_yaml"]], "load() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.load"]], "path_constructor() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.path_constructor"]], "path_representer() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.path_representer"]], "path_to_str() (benchbuild.utils.settings.configpath static method)": [[5, "benchbuild.utils.settings.ConfigPath.path_to_str"]], "setup_config() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.setup_config"]], "store() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.store"]], "to_env_dict() (benchbuild.utils.settings.configuration method)": [[5, "benchbuild.utils.settings.Configuration.to_env_dict"]], "to_env_var() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.to_env_var"]], "to_yaml() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.to_yaml"]], "update_env() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.update_env"]], "upgrade() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.upgrade"]], "uuid_add_implicit_resolver() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.uuid_add_implicit_resolver"]], "uuid_constructor() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.uuid_constructor"]], "uuid_representer() (in module benchbuild.utils.settings)": [[5, "benchbuild.utils.settings.uuid_representer"]], "validate() (benchbuild.utils.settings.configpath method)": [[5, "benchbuild.utils.settings.ConfigPath.validate"]], "value (benchbuild.utils.settings.configuration property)": [[5, "benchbuild.utils.settings.Configuration.value"]], "yaml_constructors (benchbuild.utils.settings.configloader attribute)": [[5, "benchbuild.utils.settings.ConfigLoader.yaml_constructors"]], "yaml_implicit_resolvers (benchbuild.utils.settings.configdumper attribute)": [[5, "benchbuild.utils.settings.ConfigDumper.yaml_implicit_resolvers"]], "yaml_implicit_resolvers (benchbuild.utils.settings.configloader attribute)": [[5, "benchbuild.utils.settings.ConfigLoader.yaml_implicit_resolvers"]], "yaml_representers (benchbuild.utils.settings.configdumper attribute)": [[5, "benchbuild.utils.settings.ConfigDumper.yaml_representers"]], "absent (benchbuild.environments.domain.model.layerstate attribute)": [[6, "benchbuild.environments.domain.model.LayerState.ABSENT"]], "addlayer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.AddLayer"]], "bashstrategy (class in benchbuild.container)": [[6, "benchbuild.container.BashStrategy"]], "command (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Command"]], "container (class in benchbuild.container)": [[6, "benchbuild.container.Container"]], "container (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Container"]], "containerbootstrap (class in benchbuild.container)": [[6, "benchbuild.container.ContainerBootstrap"]], "containercreate (class in benchbuild.container)": [[6, "benchbuild.container.ContainerCreate"]], "containerimage (class in benchbuild.environments.domain.declarative)": [[6, "benchbuild.environments.domain.declarative.ContainerImage"]], "containerlist (class in benchbuild.container)": [[6, "benchbuild.container.ContainerList"]], "containerrun (class in benchbuild.container)": [[6, "benchbuild.container.ContainerRun"]], "containerstrategy (class in benchbuild.container)": [[6, "benchbuild.container.ContainerStrategy"]], "contextlayer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.ContextLayer"]], "copylayer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.CopyLayer"]], "createbenchbuildbase (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.CreateBenchbuildBase"]], "createimage (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.CreateImage"]], "deleteimage (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.DeleteImage"]], "entrypoint (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.EntryPoint"]], "event (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Event"]], "exportimage (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.ExportImage"]], "fromlayer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.FromLayer"]], "image (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Image"]], "importimage (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.ImportImage"]], "layer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Layer"]], "layerstate (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.LayerState"]], "message (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Message"]], "mockobj (class in benchbuild.container)": [[6, "benchbuild.container.MockObj"]], "mount (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.Mount"]], "present (benchbuild.environments.domain.model.layerstate attribute)": [[6, "benchbuild.environments.domain.model.LayerState.PRESENT"]], "runlayer (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.RunLayer"]], "runprojectcontainer (class in benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.RunProjectContainer"]], "setcommand (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.SetCommand"]], "setuppolyjitgentoostrategy (class in benchbuild.container)": [[6, "benchbuild.container.SetupPolyJITGentooStrategy"]], "updateenv (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.UpdateEnv"]], "version (benchbuild.container.container attribute)": [[6, "benchbuild.container.Container.VERSION"]], "workingdirectory (class in benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.WorkingDirectory"]], "add() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.add"]], "add_benchbuild_layers() (in module benchbuild.environments.domain.declarative)": [[6, "benchbuild.environments.domain.declarative.add_benchbuild_layers"]], "append() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.append"]], "args (benchbuild.environments.domain.commands.runprojectcontainer attribute)": [[6, "benchbuild.environments.domain.commands.RunProjectContainer.args"]], "args (benchbuild.environments.domain.model.runlayer attribute)": [[6, "benchbuild.environments.domain.model.RunLayer.args"]], "base (benchbuild.environments.domain.declarative.containerimage property)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.base"]], "base (benchbuild.environments.domain.model.fromlayer attribute)": [[6, "benchbuild.environments.domain.model.FromLayer.base"]], "benchbuild.container": [[6, "module-benchbuild.container"]], "benchbuild.environments.domain.commands": [[6, "module-benchbuild.environments.domain.commands"]], "benchbuild.environments.domain.declarative": [[6, "module-benchbuild.environments.domain.declarative"]], "benchbuild.environments.domain.model": [[6, "module-benchbuild.environments.domain.model"]], "build_dir (benchbuild.environments.domain.commands.runprojectcontainer attribute)": [[6, "benchbuild.environments.domain.commands.RunProjectContainer.build_dir"]], "builddir() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.builddir"]], "clean_directories() (in module benchbuild.container)": [[6, "benchbuild.container.clean_directories"]], "command (benchbuild.environments.domain.model.entrypoint attribute)": [[6, "benchbuild.environments.domain.model.EntryPoint.command"]], "command (benchbuild.environments.domain.model.runlayer attribute)": [[6, "benchbuild.environments.domain.model.RunLayer.command"]], "command (benchbuild.environments.domain.model.setcommand attribute)": [[6, "benchbuild.environments.domain.model.SetCommand.command"]], "command() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.command"]], "container_id (benchbuild.environments.domain.model.container attribute)": [[6, "benchbuild.environments.domain.model.Container.container_id"]], "context (benchbuild.environments.domain.model.container attribute)": [[6, "benchbuild.environments.domain.model.Container.context"]], "context() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.context"]], "copy_() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.copy_"]], "destination (benchbuild.environments.domain.model.addlayer attribute)": [[6, "benchbuild.environments.domain.model.AddLayer.destination"]], "destination (benchbuild.environments.domain.model.copylayer attribute)": [[6, "benchbuild.environments.domain.model.CopyLayer.destination"]], "directory (benchbuild.environments.domain.model.workingdirectory attribute)": [[6, "benchbuild.environments.domain.model.WorkingDirectory.directory"]], "entrypoint() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.entrypoint"]], "env (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.env"]], "env (benchbuild.environments.domain.model.updateenv attribute)": [[6, "benchbuild.environments.domain.model.UpdateEnv.env"]], "env() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.env"]], "events (benchbuild.environments.domain.model.container attribute)": [[6, "benchbuild.environments.domain.model.Container.events"]], "events (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.events"]], "find_hash() (in module benchbuild.container)": [[6, "benchbuild.container.find_hash"]], "from_ (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.from_"]], "from_() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.from_"]], "fs_compliant_name() (in module benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.fs_compliant_name"]], "func (benchbuild.environments.domain.model.contextlayer attribute)": [[6, "benchbuild.environments.domain.model.ContextLayer.func"]], "image (benchbuild.environments.domain.commands.exportimage attribute)": [[6, "benchbuild.environments.domain.commands.ExportImage.image"]], "image (benchbuild.environments.domain.commands.importimage attribute)": [[6, "benchbuild.environments.domain.commands.ImportImage.image"]], "image (benchbuild.environments.domain.commands.runprojectcontainer attribute)": [[6, "benchbuild.environments.domain.commands.RunProjectContainer.image"]], "image (benchbuild.environments.domain.model.container attribute)": [[6, "benchbuild.environments.domain.model.Container.image"]], "immutable_kwargs() (in module benchbuild.environments.domain.model)": [[6, "benchbuild.environments.domain.model.immutable_kwargs"]], "in_path (benchbuild.environments.domain.commands.importimage attribute)": [[6, "benchbuild.environments.domain.commands.ImportImage.in_path"]], "input_file() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.input_file"]], "install_cmake_and_exit() (benchbuild.container.containerbootstrap method)": [[6, "benchbuild.container.ContainerBootstrap.install_cmake_and_exit"]], "is_complete() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.is_complete"]], "is_present() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.is_present"]], "kwargs (benchbuild.environments.domain.model.runlayer attribute)": [[6, "benchbuild.environments.domain.model.RunLayer.kwargs"]], "layer_index (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.layer_index"]], "layers (benchbuild.environments.domain.commands.createbenchbuildbase attribute)": [[6, "benchbuild.environments.domain.commands.CreateBenchbuildBase.layers"]], "layers (benchbuild.environments.domain.commands.createimage attribute)": [[6, "benchbuild.environments.domain.commands.CreateImage.layers"]], "layers (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.layers"]], "main() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.main"]], "main() (benchbuild.container.containerbootstrap method)": [[6, "benchbuild.container.ContainerBootstrap.main"]], "main() (benchbuild.container.containercreate method)": [[6, "benchbuild.container.ContainerCreate.main"]], "main() (benchbuild.container.containerlist method)": [[6, "benchbuild.container.ContainerList.main"]], "main() (benchbuild.container.containerrun method)": [[6, "benchbuild.container.ContainerRun.main"]], "main() (in module benchbuild.container)": [[6, "benchbuild.container.main"]], "mounts (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.mounts"]], "mounts() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.mounts"]], "name (benchbuild.environments.domain.commands.createbenchbuildbase attribute)": [[6, "benchbuild.environments.domain.commands.CreateBenchbuildBase.name"]], "name (benchbuild.environments.domain.commands.createimage attribute)": [[6, "benchbuild.environments.domain.commands.CreateImage.name"]], "name (benchbuild.environments.domain.commands.deleteimage attribute)": [[6, "benchbuild.environments.domain.commands.DeleteImage.name"]], "name (benchbuild.environments.domain.commands.runprojectcontainer attribute)": [[6, "benchbuild.environments.domain.commands.RunProjectContainer.name"]], "name (benchbuild.environments.domain.model.container attribute)": [[6, "benchbuild.environments.domain.model.Container.name"]], "name (benchbuild.environments.domain.model.image attribute)": [[6, "benchbuild.environments.domain.model.Image.name"]], "oci_compliant_name() (in module benchbuild.environments.domain.commands)": [[6, "benchbuild.environments.domain.commands.oci_compliant_name"]], "out_name (benchbuild.environments.domain.commands.exportimage attribute)": [[6, "benchbuild.environments.domain.commands.ExportImage.out_name"]], "output_file() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.output_file"]], "pack_container() (in module benchbuild.container)": [[6, "benchbuild.container.pack_container"]], "prepend() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.prepend"]], "present() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.present"]], "run() (benchbuild.container.bashstrategy method)": [[6, "benchbuild.container.BashStrategy.run"]], "run() (benchbuild.container.containerstrategy method)": [[6, "benchbuild.container.ContainerStrategy.run"]], "run() (benchbuild.container.setuppolyjitgentoostrategy method)": [[6, "benchbuild.container.SetupPolyJITGentooStrategy.run"]], "run() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.run"]], "run_in_container() (in module benchbuild.container)": [[6, "benchbuild.container.run_in_container"]], "set_input_container() (in module benchbuild.container)": [[6, "benchbuild.container.set_input_container"]], "setup_bash_in_container() (in module benchbuild.container)": [[6, "benchbuild.container.setup_bash_in_container"]], "setup_container() (in module benchbuild.container)": [[6, "benchbuild.container.setup_container"]], "setup_directories() (in module benchbuild.container)": [[6, "benchbuild.container.setup_directories"]], "shell() (benchbuild.container.container method)": [[6, "benchbuild.container.Container.shell"]], "source (benchbuild.environments.domain.model.mount attribute)": [[6, "benchbuild.environments.domain.model.Mount.source"]], "sources (benchbuild.environments.domain.model.addlayer attribute)": [[6, "benchbuild.environments.domain.model.AddLayer.sources"]], "sources (benchbuild.environments.domain.model.copylayer attribute)": [[6, "benchbuild.environments.domain.model.CopyLayer.sources"]], "strategy() (benchbuild.container.containercreate method)": [[6, "benchbuild.container.ContainerCreate.strategy"]], "target (benchbuild.environments.domain.model.mount attribute)": [[6, "benchbuild.environments.domain.model.Mount.target"]], "update_env() (benchbuild.environments.domain.model.image method)": [[6, "benchbuild.environments.domain.model.Image.update_env"]], "verbosity (benchbuild.container.container attribute)": [[6, "benchbuild.container.Container.verbosity"]], "workingdir() (benchbuild.environments.domain.declarative.containerimage method)": [[6, "benchbuild.environments.domain.declarative.ContainerImage.workingdir"]], "argsrenderstrategy (class in benchbuild.command)": [[8, "benchbuild.command.ArgsRenderStrategy"]], "argstoken (class in benchbuild.command)": [[8, "benchbuild.command.ArgsToken"]], "backupfn (class in benchbuild.command)": [[8, "benchbuild.command.BackupFn"]], "builddirrenderer (class in benchbuild.command)": [[8, "benchbuild.command.BuilddirRenderer"]], "command (class in benchbuild.command)": [[8, "benchbuild.command.Command"]], "conststrrenderer (class in benchbuild.command)": [[8, "benchbuild.command.ConstStrRenderer"]], "onlyin (class in benchbuild.command)": [[8, "benchbuild.command.OnlyIn"]], "pathrenderstrategy (class in benchbuild.command)": [[8, "benchbuild.command.PathRenderStrategy"]], "pathtoken (class in benchbuild.command)": [[8, "benchbuild.command.PathToken"]], "projectcommand (class in benchbuild.command)": [[8, "benchbuild.command.ProjectCommand"]], "projectroot() (in module benchbuild.command)": [[8, "benchbuild.command.ProjectRoot"]], "prunefn (class in benchbuild.command)": [[8, "benchbuild.command.PruneFn"]], "restorefn (class in benchbuild.command)": [[8, "benchbuild.command.RestoreFn"]], "rootrenderer (class in benchbuild.command)": [[8, "benchbuild.command.RootRenderer"]], "sourceroot() (in module benchbuild.command)": [[8, "benchbuild.command.SourceRoot"]], "sourcerootrenderer (class in benchbuild.command)": [[8, "benchbuild.command.SourceRootRenderer"]], "supportsunwrap (class in benchbuild.command)": [[8, "benchbuild.command.SupportsUnwrap"]], "workloadset (class in benchbuild.command)": [[8, "benchbuild.command.WorkloadSet"]], "as_plumbum() (benchbuild.command.command method)": [[8, "benchbuild.command.Command.as_plumbum"]], "benchbuild.command": [[8, "module-benchbuild.command"]], "cleanup() (in module benchbuild.command)": [[8, "benchbuild.command.cleanup"]], "command (benchbuild.command.projectcommand attribute)": [[8, "benchbuild.command.ProjectCommand.command"]], "consumes (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.consumes"]], "consumes (benchbuild.command.command property)": [[8, "id0"]], "creates (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.creates"]], "creates (benchbuild.command.command property)": [[8, "id1"]], "dirname (benchbuild.command.command property)": [[8, "benchbuild.command.Command.dirname"]], "dirname (benchbuild.command.pathtoken property)": [[8, "benchbuild.command.PathToken.dirname"]], "env() (benchbuild.command.command method)": [[8, "benchbuild.command.Command.env"]], "exists() (benchbuild.command.pathtoken method)": [[8, "benchbuild.command.PathToken.exists"]], "filter_workload_index() (in module benchbuild.command)": [[8, "benchbuild.command.filter_workload_index"]], "label (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.label"]], "label (benchbuild.command.command property)": [[8, "id2"]], "left (benchbuild.command.pathtoken attribute)": [[8, "benchbuild.command.PathToken.left"]], "local (benchbuild.command.sourcerootrenderer attribute)": [[8, "benchbuild.command.SourceRootRenderer.local"]], "make_token() (benchbuild.command.argstoken class method)": [[8, "benchbuild.command.ArgsToken.make_token"]], "make_token() (benchbuild.command.pathtoken class method)": [[8, "benchbuild.command.PathToken.make_token"]], "name (benchbuild.command.command property)": [[8, "benchbuild.command.Command.name"]], "name (benchbuild.command.pathtoken property)": [[8, "benchbuild.command.PathToken.name"]], "output (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.output"]], "output (benchbuild.command.command property)": [[8, "id3"]], "output_param (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.output_param"]], "path (benchbuild.command.command attribute)": [[8, "benchbuild.command.Command.path"]], "path (benchbuild.command.command property)": [[8, "id4"]], "path (benchbuild.command.projectcommand property)": [[8, "benchbuild.command.ProjectCommand.path"]], "project (benchbuild.command.projectcommand attribute)": [[8, "benchbuild.command.ProjectCommand.project"]], "project_root() (in module benchbuild.command)": [[8, "benchbuild.command.project_root"]], "render() (benchbuild.command.argstoken method)": [[8, "benchbuild.command.ArgsToken.render"]], "render() (benchbuild.command.pathtoken method)": [[8, "benchbuild.command.PathToken.render"]], "rendered() (benchbuild.command.argsrenderstrategy method)": [[8, "benchbuild.command.ArgsRenderStrategy.rendered"]], "rendered() (benchbuild.command.builddirrenderer method)": [[8, "benchbuild.command.BuilddirRenderer.rendered"]], "rendered() (benchbuild.command.conststrrenderer method)": [[8, "benchbuild.command.ConstStrRenderer.rendered"]], "rendered() (benchbuild.command.pathrenderstrategy method)": [[8, "benchbuild.command.PathRenderStrategy.rendered"]], "rendered() (benchbuild.command.rootrenderer method)": [[8, "benchbuild.command.RootRenderer.rendered"]], "rendered() (benchbuild.command.sourcerootrenderer method)": [[8, "benchbuild.command.SourceRootRenderer.rendered"]], "rendered_args() (benchbuild.command.command method)": [[8, "benchbuild.command.Command.rendered_args"]], "renderer (benchbuild.command.argstoken attribute)": [[8, "benchbuild.command.ArgsToken.renderer"]], "renderer (benchbuild.command.pathtoken attribute)": [[8, "benchbuild.command.PathToken.renderer"]], "rev_range (benchbuild.command.onlyin attribute)": [[8, "benchbuild.command.OnlyIn.rev_range"]], "right (benchbuild.command.pathtoken attribute)": [[8, "benchbuild.command.PathToken.right"]], "source_root() (in module benchbuild.command)": [[8, "benchbuild.command.source_root"]], "unrendered (benchbuild.command.argsrenderstrategy property)": [[8, "benchbuild.command.ArgsRenderStrategy.unrendered"]], "unrendered (benchbuild.command.builddirrenderer property)": [[8, "benchbuild.command.BuilddirRenderer.unrendered"]], "unrendered (benchbuild.command.conststrrenderer property)": [[8, "benchbuild.command.ConstStrRenderer.unrendered"]], "unrendered (benchbuild.command.pathrenderstrategy property)": [[8, "benchbuild.command.PathRenderStrategy.unrendered"]], "unrendered (benchbuild.command.rootrenderer property)": [[8, "benchbuild.command.RootRenderer.unrendered"]], "unrendered (benchbuild.command.sourcerootrenderer property)": [[8, "benchbuild.command.SourceRootRenderer.unrendered"]], "unwrap() (benchbuild.command.onlyin method)": [[8, "benchbuild.command.OnlyIn.unwrap"]], "unwrap() (benchbuild.command.supportsunwrap method)": [[8, "benchbuild.command.SupportsUnwrap.unwrap"]], "unwrap() (benchbuild.command.workloadset method)": [[8, "benchbuild.command.WorkloadSet.unwrap"]], "unwrap() (in module benchbuild.command)": [[8, "benchbuild.command.unwrap"]], "value (benchbuild.command.conststrrenderer attribute)": [[8, "benchbuild.command.ConstStrRenderer.value"]], "workload_set (benchbuild.command.onlyin attribute)": [[8, "benchbuild.command.OnlyIn.workload_set"]], "basesource (class in benchbuild.source.base)": [[12, "benchbuild.source.base.BaseSource"]], "contextawaresource (class in benchbuild.source.base)": [[12, "benchbuild.source.base.ContextAwareSource"]], "contextenumeratorfn (class in benchbuild.source.base)": [[12, "benchbuild.source.base.ContextEnumeratorFn"]], "contextfreemixin (class in benchbuild.source.base)": [[12, "benchbuild.source.base.ContextFreeMixin"]], "enumeratorfn (class in benchbuild.source.base)": [[12, "benchbuild.source.base.EnumeratorFn"]], "expandable (class in benchbuild.source.base)": [[12, "benchbuild.source.base.Expandable"]], "fetchable (class in benchbuild.source.base)": [[12, "benchbuild.source.base.Fetchable"]], "fetchablesource (class in benchbuild.source.base)": [[12, "benchbuild.source.base.FetchableSource"]], "git (class in benchbuild.source.git)": [[12, "benchbuild.source.git.Git"]], "gitsubmodule (class in benchbuild.source.git)": [[12, "benchbuild.source.git.GitSubmodule"]], "http (class in benchbuild.source.http)": [[12, "benchbuild.source.http.HTTP"]], "httpmultiple (class in benchbuild.source.http)": [[12, "benchbuild.source.http.HTTPMultiple"]], "httpuntar (class in benchbuild.source.http)": [[12, "benchbuild.source.http.HTTPUntar"]], "nosource (class in benchbuild.source.base)": [[12, "benchbuild.source.base.NoSource"]], "revision (class in benchbuild.source.base)": [[12, "benchbuild.source.base.Revision"]], "revisionstr (class in benchbuild.source.base)": [[12, "benchbuild.source.base.RevisionStr"]], "variant (class in benchbuild.source.base)": [[12, "benchbuild.source.base.Variant"]], "versioned (class in benchbuild.source.base)": [[12, "benchbuild.source.base.Versioned"]], "benchbuild.source": [[12, "module-benchbuild.source"]], "benchbuild.source.base": [[12, "module-benchbuild.source.base"]], "benchbuild.source.git": [[12, "module-benchbuild.source.git"]], "benchbuild.source.http": [[12, "module-benchbuild.source.http"]], "benchbuild.source.rsync": [[12, "module-benchbuild.source.rsync"]], "clone_needed() (in module benchbuild.source.git)": [[12, "benchbuild.source.git.clone_needed"]], "default (benchbuild.source.base.fetchablesource property)": [[12, "benchbuild.source.base.FetchableSource.default"]], "default (benchbuild.source.base.nosource property)": [[12, "benchbuild.source.base.NoSource.default"]], "default (benchbuild.source.base.versioned property)": [[12, "benchbuild.source.base.Versioned.default"]], "default (benchbuild.source.git.git property)": [[12, "benchbuild.source.git.Git.default"]], "default (benchbuild.source.http.http property)": [[12, "benchbuild.source.http.HTTP.default"]], "download_required() (in module benchbuild.source.http)": [[12, "benchbuild.source.http.download_required"]], "download_single_version() (in module benchbuild.source.http)": [[12, "benchbuild.source.http.download_single_version"]], "enumerate_revisions() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.enumerate_revisions"]], "explore() (benchbuild.source.base.fetchablesource method)": [[12, "benchbuild.source.base.FetchableSource.explore"]], "extend() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.extend"]], "fetch() (benchbuild.source.base.fetchable method)": [[12, "benchbuild.source.base.Fetchable.fetch"]], "fetch() (benchbuild.source.base.fetchablesource method)": [[12, "benchbuild.source.base.FetchableSource.fetch"]], "fetch() (benchbuild.source.base.nosource method)": [[12, "benchbuild.source.base.NoSource.fetch"]], "fetch() (benchbuild.source.git.git method)": [[12, "benchbuild.source.git.Git.fetch"]], "fetch() (benchbuild.source.http.http method)": [[12, "benchbuild.source.http.HTTP.fetch"]], "fetch_version() (benchbuild.source.http.http method)": [[12, "benchbuild.source.http.HTTP.fetch_version"]], "fetch_version() (benchbuild.source.http.httpmultiple method)": [[12, "benchbuild.source.http.HTTPMultiple.fetch_version"]], "has_variant() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.has_variant"]], "is_context_free() (benchbuild.source.base.contextawaresource method)": [[12, "benchbuild.source.base.ContextAwareSource.is_context_free"]], "is_context_free() (benchbuild.source.base.contextfreemixin method)": [[12, "benchbuild.source.base.ContextFreeMixin.is_context_free"]], "is_expandable (benchbuild.source.base.expandable property)": [[12, "benchbuild.source.base.Expandable.is_expandable"]], "is_expandable (benchbuild.source.base.fetchablesource property)": [[12, "benchbuild.source.base.FetchableSource.is_expandable"]], "is_expandable (benchbuild.source.git.gitsubmodule property)": [[12, "benchbuild.source.git.GitSubmodule.is_expandable"]], "key (benchbuild.source.base.fetchable property)": [[12, "benchbuild.source.base.Fetchable.key"]], "key (benchbuild.source.base.fetchablesource property)": [[12, "benchbuild.source.base.FetchableSource.key"]], "local (benchbuild.source.base.fetchable property)": [[12, "benchbuild.source.base.Fetchable.local"]], "local (benchbuild.source.base.fetchablesource property)": [[12, "benchbuild.source.base.FetchableSource.local"]], "maybe_shallow() (in module benchbuild.source.git)": [[12, "benchbuild.source.git.maybe_shallow"]], "name() (benchbuild.source.base.variant method)": [[12, "benchbuild.source.base.Variant.name"]], "normalize_remotes() (in module benchbuild.source.http)": [[12, "benchbuild.source.http.normalize_remotes"]], "nosource() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.nosource"]], "owner (benchbuild.source.base.variant attribute)": [[12, "benchbuild.source.base.Variant.owner"]], "primary (benchbuild.source.base.revision property)": [[12, "benchbuild.source.base.Revision.primary"]], "primary() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.primary"]], "product() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.product"]], "project_cls (benchbuild.source.base.revision attribute)": [[12, "benchbuild.source.base.Revision.project_cls"]], "remote (benchbuild.source.base.fetchable property)": [[12, "benchbuild.source.base.Fetchable.remote"]], "remote (benchbuild.source.base.fetchablesource property)": [[12, "benchbuild.source.base.FetchableSource.remote"]], "revision_from_str() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.revision_from_str"]], "secondaries() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.secondaries"]], "sorted() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.sorted"]], "source() (benchbuild.source.base.variant method)": [[12, "benchbuild.source.base.Variant.source"]], "source_by_name() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.source_by_name"]], "sources_as_dict() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.sources_as_dict"]], "target_prefix() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.target_prefix"]], "to_str() (in module benchbuild.source.base)": [[12, "benchbuild.source.base.to_str"]], "update() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.update"]], "value (benchbuild.source.base.revisionstr attribute)": [[12, "benchbuild.source.base.RevisionStr.value"]], "variant_by_name() (benchbuild.source.base.revision method)": [[12, "benchbuild.source.base.Revision.variant_by_name"]], "variants (benchbuild.source.base.revision attribute)": [[12, "benchbuild.source.base.Revision.variants"]], "version (benchbuild.source.base.variant attribute)": [[12, "benchbuild.source.base.Variant.version"]], "version() (benchbuild.source.base.fetchablesource method)": [[12, "benchbuild.source.base.FetchableSource.version"]], "version() (benchbuild.source.base.nosource method)": [[12, "benchbuild.source.base.NoSource.version"]], "version() (benchbuild.source.base.versioned method)": [[12, "benchbuild.source.base.Versioned.version"]], "version() (benchbuild.source.git.git method)": [[12, "benchbuild.source.git.Git.version"]], "version() (benchbuild.source.http.http method)": [[12, "benchbuild.source.http.HTTP.version"]], "version() (benchbuild.source.http.httpuntar method)": [[12, "benchbuild.source.http.HTTPUntar.version"]], "versioned_target_name() (in module benchbuild.source.http)": [[12, "benchbuild.source.http.versioned_target_name"]], "versions() (benchbuild.source.base.expandable method)": [[12, "benchbuild.source.base.Expandable.versions"]], "versions() (benchbuild.source.base.fetchablesource method)": [[12, "benchbuild.source.base.FetchableSource.versions"]], "versions() (benchbuild.source.base.nosource method)": [[12, "benchbuild.source.base.NoSource.versions"]], "versions() (benchbuild.source.base.versioned method)": [[12, "benchbuild.source.base.Versioned.versions"]], "versions() (benchbuild.source.git.git method)": [[12, "benchbuild.source.git.Git.versions"]], "versions() (benchbuild.source.http.http method)": [[12, "benchbuild.source.http.HTTP.versions"]], "versions_with_context() (benchbuild.source.base.contextawaresource method)": [[12, "benchbuild.source.base.ContextAwareSource.versions_with_context"]], "versions_with_context() (benchbuild.source.base.contextfreemixin method)": [[12, "benchbuild.source.base.ContextFreeMixin.versions_with_context"]]}})