from ._dill import _trace as trace
from typing import Any, Optional

def getmodule(object: Any, _filename: Optional[Any] = ..., force: bool = ...): ...
def outermost(func: Any): ...
def nestedcode(func: Any, recurse: bool = ...): ...
def code(func: Any): ...
def referrednested(func: Any, recurse: bool = ...): ...
def freevars(func: Any): ...
def nestedglobals(func: Any, recurse: bool = ...): ...
def referredglobals(func: Any, recurse: bool = ..., builtin: bool = ...): ...
def globalvars(func: Any, recurse: bool = ..., builtin: bool = ...): ...
def varnames(func: Any): ...
def baditems(obj: Any, exact: bool = ..., safe: bool = ...): ...
def badobjects(obj: Any, depth: int = ..., exact: bool = ..., safe: bool = ...): ...
def badtypes(obj: Any, depth: int = ..., exact: bool = ..., safe: bool = ...): ...
def errors(obj: Any, depth: int = ..., exact: bool = ..., safe: bool = ...): ...
