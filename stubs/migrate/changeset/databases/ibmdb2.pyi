from migrate import exceptions as exceptions
from migrate.changeset import ansisql, util as util
from sqlalchemy.schema import PrimaryKeyConstraint as PrimaryKeyConstraint
from typing import Any

LOG: Any
IBMDBSchemaGenerator: Any

def get_server_version_info(dialect: Any): ...
def is_unique_constraint_with_null_columns_supported(dialect: Any): ...

class IBMDBColumnGenerator(IBMDBSchemaGenerator, ansisql.ANSIColumnGenerator):
    def visit_column(self, column: Any) -> None: ...

class IBMDBColumnDropper(ansisql.ANSIColumnDropper):
    def visit_column(self, column: Any) -> None: ...

class IBMDBSchemaChanger(IBMDBSchemaGenerator, ansisql.ANSISchemaChanger):
    def visit_table(self, table: Any) -> None: ...
    name: Any = ...
    def visit_index(self, index: Any): ...
    def visit_column(self, delta: Any) -> None: ...

class IBMDBConstraintGenerator(ansisql.ANSIConstraintGenerator): ...

class IBMDBConstraintDropper(ansisql.ANSIConstraintDropper, ansisql.ANSIConstraintCommon):
    def visit_migrate_primary_key_constraint(self, constraint: Any) -> None: ...

class IBMDBDialect(ansisql.ANSIDialect):
    columngenerator: Any = ...
    columndropper: Any = ...
    schemachanger: Any = ...
    constraintgenerator: Any = ...
    constraintdropper: Any = ...
