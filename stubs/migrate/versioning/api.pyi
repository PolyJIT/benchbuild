from migrate.versioning import repository, schema, script as script_, version as version
from typing import Any, Optional

Repository = repository.Repository
ControlledSchema = schema.ControlledSchema
VerNum = version.VerNum
PythonScript = script_.PythonScript
SqlScript = script_.SqlScript

def help(cmd: Optional[Any] = ..., **opts: Any): ...
def create(repository: Any, name: Any, **opts: Any) -> None: ...
def script(description: Any, repository: Any, **opts: Any) -> None: ...
def script_sql(database: Any, description: Any, repository: Any, **opts: Any) -> None: ...
def db_version(url: Any, repository: Any, **opts: Any): ...
def source(version: Any, dest: Optional[Any] = ..., repository: Optional[Any] = ..., **opts: Any): ...
def upgrade(url: Any, repository: Any, version: Optional[Any] = ..., **opts: Any): ...
def downgrade(url: Any, repository: Any, version: Any, **opts: Any): ...
def test(url: Any, repository: Any, **opts: Any) -> None: ...
def version_control(url: Any, repository: Any, version: Optional[Any] = ..., **opts: Any) -> None: ...
def drop_version_control(url: Any, repository: Any, **opts: Any) -> None: ...
def manage(file: Any, **opts: Any) -> None: ...
def compare_model_to_db(url: Any, repository: Any, model: Any, **opts: Any): ...
def create_model(url: Any, repository: Any, **opts: Any): ...
def make_update_script_for_model(url: Any, repository: Any, oldmodel: Any, model: Any, **opts: Any): ...
def update_db_from_model(url: Any, repository: Any, model: Any, **opts: Any) -> None: ...
