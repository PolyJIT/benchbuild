from migrate.versioning.config import *
from migrate.versioning import pathed
from pkg_resources import resource_filename as resource_filename
from typing import Any, Optional

log: Any

class Changeset(dict):
    step: Any = ...
    start: Any = ...
    end: Any = ...
    def __init__(self, start: Any, *changes: Any, **k: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def keys(self): ...
    def values(self): ...
    def items(self): ...
    def add(self, change: Any) -> None: ...
    def run(self, *p: Any, **k: Any) -> None: ...

class Repository(pathed.Pathed):
    config: Any = ...
    versions: Any = ...
    def __init__(self, path: Any) -> None: ...
    @classmethod
    def verify(cls, path: Any) -> None: ...
    @classmethod
    def prepare_config(cls, tmpl_dir: Any, name: Any, options: Optional[Any] = ...): ...
    @classmethod
    def create(cls, path: Any, name: Any, **opts: Any): ...
    def create_script(self, description: Any, **k: Any) -> None: ...
    def create_script_sql(self, database: Any, description: Any, **k: Any) -> None: ...
    @property
    def latest(self): ...
    @property
    def version_table(self): ...
    @property
    def id(self): ...
    @property
    def use_timestamp_numbering(self): ...
    def version(self, *p: Any, **k: Any): ...
    @classmethod
    def clear(cls) -> None: ...
    def changeset(self, database: Any, start: Any, end: Optional[Any] = ...): ...
    @classmethod
    def create_manage_file(cls, file_: Any, **opts: Any) -> None: ...
