import numpy.ma as np
from pandas._typing import ArrayLike as ArrayLike, Dtype as Dtype
from pandas.core.dtypes.dtypes import ExtensionDtype
from pandas.core.dtypes.generic import ABCExtensionArray
from pandas.core.indexes.api import Index
from pandas.core.series import Series
from typing import Any, Optional, Sequence, Union

def array(data: Sequence[object], dtype: Optional[Union[str, np.dtype, ExtensionDtype]]=..., copy: bool=...) -> ABCExtensionArray: ...
def extract_array(obj: Any, extract_numpy: bool = ...): ...
def sanitize_array(data: Any, index: Any, dtype: Any=..., copy: bool=..., raise_cast_failure: bool=...) -> Any: ...
def is_empty_data(data: Any) -> bool: ...
def create_series_with_explicit_dtype(data: Any=..., index: Optional[Union[ArrayLike, Index]]=..., dtype: Optional[Dtype]=..., name: Optional[str]=..., copy: bool=..., fastpath: bool=..., dtype_if_empty: Dtype=...) -> Series: ...
