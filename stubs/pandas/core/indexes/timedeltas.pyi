from pandas._libs import Timedelta
from pandas.core.arrays import datetimelike as dtl
from pandas.core.indexes.datetimelike import DatetimeTimedeltaMixin, DatetimelikeDelegateMixin
from typing import Any, Optional

class TimedeltaDelegateMixin(DatetimelikeDelegateMixin): ...

class TimedeltaIndex(DatetimeTimedeltaMixin, dtl.TimelikeOps, TimedeltaDelegateMixin):
    def __new__(cls, data: Optional[Any] = ..., unit: Optional[Any] = ..., freq: Optional[Any] = ..., closed: Optional[Any] = ..., dtype: Any = ..., copy: bool = ..., name: Optional[Any] = ...): ...
    def astype(self, dtype: Any, copy: bool = ...): ...
    def get_value(self, series: Any, key: Any): ...
    def get_value_maybe_box(self, series: Any, key: Timedelta) -> Any: ...
    def get_loc(self, key: Any, method: Optional[Any] = ..., tolerance: Optional[Any] = ...): ...
    def searchsorted(self, value: Any, side: str = ..., sorter: Optional[Any] = ...): ...
    def is_type_compatible(self, typ: Any) -> bool: ...
    @property
    def inferred_type(self) -> str: ...
    def insert(self, loc: Any, item: Any): ...

def timedelta_range(start: Any=..., end: Any=..., periods: Any=..., freq: Any=..., name: Any=..., closed: Any=...) -> TimedeltaIndex: ...
