from typing import Any, Optional

class PopenAddons:
    def verify(self, retcode: Any, timeout: Any, stdout: Any, stderr: Any) -> None: ...

class BaseMachine:
    def get(self, cmd: Any, *othercommands: Any): ...
    def __contains__(self, cmd: Any): ...
    @property
    def encoding(self): ...
    custom_encoding: Any = ...
    @encoding.setter
    def encoding(self, value: Any) -> None: ...
    def daemonic_popen(self, command: Any, cwd: str = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ..., append: bool = ...) -> None: ...
    class Cmd:
        def __init__(self, machine: Any) -> None: ...
        def __getattr__(self, name: Any): ...
    @property
    def cmd(self): ...
