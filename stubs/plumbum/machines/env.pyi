from typing import Any

class EnvPathList(list):
    def __init__(self, path_factory: Any, pathsep: Any) -> None: ...
    def append(self, path: Any) -> None: ...
    def extend(self, paths: Any) -> None: ...
    def insert(self, index: Any, path: Any) -> None: ...
    def index(self, path: Any) -> None: ...
    def __contains__(self, path: Any): ...
    def remove(self, path: Any) -> None: ...
    def update(self, text: Any) -> None: ...
    def join(self): ...

class BaseEnv:
    CASE_SENSITIVE: bool = ...
    def __init__(self, path_factory: Any, pathsep: Any) -> None: ...
    def __call__(self, *args: Any, **kwargs: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __hash__(self) -> Any: ...
    def __len__(self): ...
    def __contains__(self, name: Any): ...
    def __getitem__(self, name: Any): ...
    def keys(self): ...
    def items(self): ...
    def values(self): ...
    def get(self, name: Any, *default: Any): ...
    def __delitem__(self, name: Any) -> None: ...
    def __setitem__(self, name: Any, value: Any) -> None: ...
    def pop(self, name: Any, *default: Any): ...
    def clear(self) -> None: ...
    def update(self, *args: Any, **kwargs: Any) -> None: ...
    def getdict(self): ...
    @property
    def path(self): ...
    home: Any = ...
    @property
    def user(self): ...
