from plumbum.machines.base import PopenAddons
from typing import Any, Optional

class ShellSessionError(Exception): ...
class SSHCommsError(EOFError): ...
class SSHCommsChannel2Error(SSHCommsError): ...
class IncorrectLogin(SSHCommsError): ...
class HostPublicKeyUnknown(SSHCommsError): ...

shell_logger: Any

class MarkedPipe:
    pipe: Any = ...
    marker: Any = ...
    def __init__(self, pipe: Any, marker: Any) -> None: ...
    def close(self) -> None: ...
    def readline(self): ...

class SessionPopen(PopenAddons):
    proc: Any = ...
    argv: Any = ...
    isatty: Any = ...
    stdin: Any = ...
    stdout: Any = ...
    stderr: Any = ...
    custom_encoding: Any = ...
    returncode: Any = ...
    def __init__(self, proc: Any, argv: Any, isatty: Any, stdin: Any, stdout: Any, stderr: Any, encoding: Any) -> None: ...
    def poll(self): ...
    def wait(self): ...
    def communicate(self, input: Optional[Any] = ...): ...

class ShellSession:
    proc: Any = ...
    custom_encoding: Any = ...
    isatty: Any = ...
    def __init__(self, proc: Any, encoding: str = ..., isatty: bool = ..., connect_timeout: int = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, t: Any, v: Any, tb: Any) -> None: ...
    def __del__(self) -> None: ...
    def alive(self): ...
    def close(self) -> None: ...
    def popen(self, cmd: Any): ...
    def run(self, cmd: Any, retcode: int = ...): ...
