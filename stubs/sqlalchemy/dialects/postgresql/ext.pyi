from ...sql import expression
from ...sql.schema import ColumnCollectionConstraint
from typing import Any, Optional

class aggregate_order_by(expression.ColumnElement):
    __visit_name__: str = ...
    target: Any = ...
    order_by: Any = ...
    def __init__(self, target: Any, *order_by: Any) -> None: ...
    def self_group(self, against: Optional[Any] = ...): ...
    def get_children(self, **kwargs: Any): ...

class ExcludeConstraint(ColumnCollectionConstraint):
    __visit_name__: str = ...
    where: Any = ...
    operators: Any = ...
    using: Any = ...
    def __init__(self, *elements: Any, **kw: Any) -> None: ...
    def copy(self, **kw: Any): ...

def array_agg(*arg: Any, **kw: Any): ...
