from typing import Any, Optional

def classname_for_table(base: Any, tablename: Any, table: Any): ...
def name_for_scalar_relationship(base: Any, local_cls: Any, referred_cls: Any, constraint: Any): ...
def name_for_collection_relationship(base: Any, local_cls: Any, referred_cls: Any, constraint: Any): ...
def generate_relationship(base: Any, direction: Any, return_fn: Any, attrname: Any, local_cls: Any, referred_cls: Any, **kw: Any): ...

class AutomapBase:
    __abstract__: bool = ...
    classes: Any = ...
    @classmethod
    def prepare(cls, engine: Optional[Any] = ..., reflect: bool = ..., schema: Optional[Any] = ..., classname_for_table: Any = ..., collection_class: Any = ..., name_for_scalar_relationship: Any = ..., name_for_collection_relationship: Any = ..., generate_relationship: Any = ...) -> None: ...

def automap_base(declarative_base: Optional[Any] = ..., **kw: Any): ...
