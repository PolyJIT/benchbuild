from typing import Any

declared_attr: Any
declarative_props: Any

class _MapperConfig:
    @classmethod
    def setup_mapping(cls, cls_: Any, classname: Any, dict_: Any) -> None: ...
    cls: Any = ...
    dict_: Any = ...
    classname: Any = ...
    persist_selectable: Any = ...
    properties: Any = ...
    declared_columns: Any = ...
    column_copies: Any = ...
    def __init__(self, cls_: Any, classname: Any, dict_: Any) -> None: ...
    def map(self): ...

class _DeferredMapperConfig(_MapperConfig):
    @property
    def cls(self): ...
    @cls.setter
    def cls(self, class_: Any) -> None: ...
    @classmethod
    def has_cls(cls, class_: Any): ...
    @classmethod
    def raise_unmapped_for_cls(cls, class_: Any) -> None: ...
    @classmethod
    def config_for_cls(cls, class_: Any): ...
    @classmethod
    def classes_for_base(cls, base_cls: Any, sort: bool = ...): ...
    def map(self): ...
