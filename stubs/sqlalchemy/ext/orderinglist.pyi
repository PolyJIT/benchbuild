from typing import Any, Optional

def ordering_list(attr: Any, count_from: Optional[Any] = ..., **kw: Any): ...

class OrderingList(list):
    ordering_attr: Any = ...
    ordering_func: Any = ...
    reorder_on_append: Any = ...
    def __init__(self, ordering_attr: Optional[Any] = ..., ordering_func: Optional[Any] = ..., reorder_on_append: bool = ...) -> None: ...
    def reorder(self) -> None: ...
    def append(self, entity: Any) -> None: ...
    def insert(self, index: Any, entity: Any) -> None: ...
    def remove(self, entity: Any) -> None: ...
    def pop(self, index: int = ...): ...
    def __setitem__(self, index: Any, entity: Any) -> None: ...
    def __delitem__(self, index: Any) -> None: ...
    def __setslice__(self, start: Any, end: Any, values: Any) -> None: ...
    def __delslice__(self, start: Any, end: Any) -> None: ...
    def __reduce__(self): ...
