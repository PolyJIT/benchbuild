from typing import Any, Optional

class PoolListener:
    def connect(self, dbapi_con: Any, con_record: Any) -> None: ...
    def first_connect(self, dbapi_con: Any, con_record: Any) -> None: ...
    def checkout(self, dbapi_con: Any, con_record: Any, con_proxy: Any) -> None: ...
    def checkin(self, dbapi_con: Any, con_record: Any) -> None: ...

class ConnectionProxy:
    def execute(self, conn: Any, execute: Any, clauseelement: Any, *multiparams: Any, **params: Any): ...
    def cursor_execute(self, execute: Any, cursor: Any, statement: Any, parameters: Any, context: Any, executemany: Any): ...
    def begin(self, conn: Any, begin: Any): ...
    def rollback(self, conn: Any, rollback: Any): ...
    def commit(self, conn: Any, commit: Any): ...
    def savepoint(self, conn: Any, savepoint: Any, name: Optional[Any] = ...): ...
    def rollback_savepoint(self, conn: Any, rollback_savepoint: Any, name: Any, context: Any): ...
    def release_savepoint(self, conn: Any, release_savepoint: Any, name: Any, context: Any): ...
    def begin_twophase(self, conn: Any, begin_twophase: Any, xid: Any): ...
    def prepare_twophase(self, conn: Any, prepare_twophase: Any, xid: Any): ...
    def rollback_twophase(self, conn: Any, rollback_twophase: Any, xid: Any, is_prepared: Any): ...
    def commit_twophase(self, conn: Any, commit_twophase: Any, xid: Any, is_prepared: Any): ...
