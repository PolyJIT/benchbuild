from typing import Any, Optional
from urwid.widget import Widget, WidgetWrap

class WidgetContainerMixin:
    def __getitem__(self, position: Any): ...
    def get_focus_path(self): ...
    def set_focus_path(self, positions: Any) -> None: ...
    def get_focus_widgets(self): ...

class WidgetContainerListContentsMixin:
    def __iter__(self) -> Any: ...
    def __reversed__(self): ...

class GridFlowError(Exception): ...

class GridFlow(WidgetWrap, WidgetContainerMixin, WidgetContainerListContentsMixin):
    def sizing(self): ...
    h_sep: Any = ...
    v_sep: Any = ...
    align: Any = ...
    def __init__(self, cells: Any, cell_width: Any, h_sep: Any, v_sep: Any, align: Any): ...
    cells: Any = ...
    cell_width: Any = ...
    contents: Any = ...
    def options(self, width_type: Any = ..., width_amount: Optional[Any] = ...): ...
    def set_focus(self, cell: Any): ...
    def get_focus(self): ...
    focus: Any = ...
    focus_cell: Any = ...
    focus_position: Any = ...
    def get_display_widget(self, size: Any): ...
    def generate_display_widget(self, size: Any): ...
    def keypress(self, size: Any, key: Any): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def render(self, size: Any, focus: bool = ...): ...
    def get_cursor_coords(self, size: Any): ...
    def move_cursor_to_coords(self, size: Any, col: Any, row: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...
    def get_pref_col(self, size: Any): ...

class OverlayError(Exception): ...

class Overlay(Widget, WidgetContainerMixin, WidgetContainerListContentsMixin):
    top_w: Any = ...
    bottom_w: Any = ...
    def __init__(self, top_w: Any, bottom_w: Any, align: Any, width: Any, valign: Any, height: Any, min_width: Optional[Any] = ..., min_height: Optional[Any] = ..., left: int = ..., right: int = ..., top: int = ..., bottom: int = ...) -> None: ...
    def options(self, align_type: Any, align_amount: Any, width_type: Any, width_amount: Any, valign_type: Any, valign_amount: Any, height_type: Any, height_amount: Any, min_width: Optional[Any] = ..., min_height: Optional[Any] = ..., left: int = ..., right: int = ..., top: int = ..., bottom: int = ...): ...
    def set_overlay_parameters(self, align: Any, width: Any, valign: Any, height: Any, min_width: Optional[Any] = ..., min_height: Optional[Any] = ..., left: int = ..., right: int = ..., top: int = ..., bottom: int = ...) -> None: ...
    def selectable(self): ...
    def keypress(self, size: Any, key: Any): ...
    focus: Any = ...
    focus_position: Any = ...
    def _contents__getitem__(self, index: Any): ...
    align_type: Any = ...
    align_amount: Any = ...
    width_type: Any = ...
    width_amount: Any = ...
    valign_type: Any = ...
    valign_amount: Any = ...
    height_type: Any = ...
    height_amount: Any = ...
    left: Any = ...
    right: Any = ...
    top: Any = ...
    bottom: Any = ...
    min_width: Any = ...
    min_height: Any = ...
    def _contents__setitem__(self, index: Any, value: Any) -> None: ...
    contents: Any = ...
    def get_cursor_coords(self, size: Any): ...
    def calculate_padding_filler(self, size: Any, focus: Any): ...
    def top_w_size(self, size: Any, left: Any, right: Any, top: Any, bottom: Any): ...
    def render(self, size: Any, focus: bool = ...): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...

class FrameError(Exception): ...

class Frame(Widget, WidgetContainerMixin):
    focus_part: Any = ...
    def __init__(self, body: Any, header: Optional[Any] = ..., footer: Optional[Any] = ..., focus_part: str = ...) -> None: ...
    def get_header(self): ...
    def set_header(self, header: Any) -> None: ...
    header: Any = ...
    def get_body(self): ...
    def set_body(self, body: Any) -> None: ...
    body: Any = ...
    def get_footer(self): ...
    def set_footer(self, footer: Any) -> None: ...
    footer: Any = ...
    def set_focus(self, part: Any) -> None: ...
    def get_focus(self): ...
    focus: Any = ...
    focus_position: Any = ...
    def _contents__getitem__(self, key: Any): ...
    def _contents__setitem__(self, key: Any, value: Any) -> None: ...
    def _contents__delitem__(self, key: Any) -> None: ...
    contents: Any = ...
    def options(self) -> None: ...
    def frame_top_bottom(self, size: Any, focus: Any): ...
    def render(self, size: Any, focus: bool = ...): ...
    def keypress(self, size: Any, key: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...
    def get_cursor_coords(self, size: Any): ...
    def __iter__(self) -> Any: ...
    def __reversed__(self) -> None: ...

class PileError(Exception): ...

class Pile(Widget, WidgetContainerMixin, WidgetContainerListContentsMixin):
    pref_col: int = ...
    def __init__(self, widget_list: Any, focus_item: Optional[Any] = ...): ...
    widget_list: Any = ...
    item_types: Any = ...
    contents: Any = ...
    def options(self, height_type: Any = ..., height_amount: int = ...): ...
    focus_position: Any = ...
    def set_focus(self, item: Any): ...
    def get_focus(self): ...
    focus: Any = ...
    focus_item: Any = ...
    def get_pref_col(self, size: Any): ...
    def get_item_size(self, size: Any, i: Any, focus: Any, item_rows: Optional[Any] = ...): ...
    def get_item_rows(self, size: Any, focus: Any): ...
    def render(self, size: Any, focus: bool = ...): ...
    def get_cursor_coords(self, size: Any): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def keypress(self, size: Any, key: Any): ...
    def move_cursor_to_coords(self, size: Any, col: Any, row: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...

class ColumnsError(Exception): ...

class Columns(Widget, WidgetContainerMixin, WidgetContainerListContentsMixin):
    dividechars: Any = ...
    focus_position: Any = ...
    pref_col: Any = ...
    min_width: Any = ...
    def __init__(self, widget_list: Any, dividechars: int = ..., focus_column: Optional[Any] = ..., min_width: int = ..., box_columns: Optional[Any] = ...): ...
    widget_list: Any = ...
    column_types: Any = ...
    box_columns: Any = ...
    has_flow_type: Any = ...
    contents: Any = ...
    def options(self, width_type: Any = ..., width_amount: int = ..., box_widget: bool = ...): ...
    def set_focus_column(self, num: Any) -> None: ...
    def get_focus_column(self): ...
    def set_focus(self, item: Any): ...
    def get_focus(self): ...
    focus: Any = ...
    focus_col: Any = ...
    def column_widths(self, size: Any, focus: bool = ...): ...
    def render(self, size: Any, focus: bool = ...): ...
    def get_cursor_coords(self, size: Any): ...
    def move_cursor_to_coords(self, size: Any, col: Any, row: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...
    def get_pref_col(self, size: Any): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def keypress(self, size: Any, key: Any): ...
