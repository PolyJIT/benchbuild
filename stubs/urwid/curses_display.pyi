from typing import Any, Optional
from urwid.display_common import BaseScreen, RealTerminal

KEY_RESIZE: int
KEY_MOUSE: int

class Screen(BaseScreen, RealTerminal):
    curses_pairs: Any = ...
    palette: Any = ...
    has_color: bool = ...
    s: Any = ...
    cursor_state: Any = ...
    prev_input_resize: int = ...
    last_bstate: int = ...
    def __init__(self) -> None: ...
    def set_mouse_tracking(self, enable: bool = ...) -> None: ...
    max_tenths: Any = ...
    complete_tenths: Any = ...
    resize_tenths: Any = ...
    def set_input_timeouts(self, max_wait: Optional[Any] = ..., complete_wait: float = ..., resize_wait: float = ...): ...
    def get_input(self, raw_keys: bool = ...): ...
    def get_cols_rows(self): ...
    keep_cache_alive_link: Any = ...
    def draw_screen(self, size: Any, r: Any) -> None: ...
    def clear(self) -> None: ...

class _test:
    ui: Any = ...
    l: Any = ...
    def __init__(self) -> None: ...
    def run(self) -> None: ...
