from typing import Any, Optional
from urwid.widget import Divider as Divider, Edit as Edit, SolidFill as SolidFill, Text as Text, Widget, WidgetError

class WidgetDecoration(Widget):
    def __init__(self, original_widget: Any) -> None: ...
    original_widget: Any = ...
    base_widget: Any = ...
    def selectable(self): ...
    def sizing(self): ...

class WidgetPlaceholder(WidgetDecoration): ...
class AttrMapError(WidgetError): ...

class AttrMap(WidgetDecoration):
    def __init__(self, w: Any, attr_map: Any, focus_map: Optional[Any] = ...) -> None: ...
    def get_attr_map(self): ...
    def set_attr_map(self, attr_map: Any) -> None: ...
    attr_map: Any = ...
    def get_focus_map(self): ...
    def set_focus_map(self, focus_map: Any) -> None: ...
    focus_map: Any = ...
    def render(self, size: Any, focus: bool = ...): ...

class AttrWrap(AttrMap):
    def __init__(self, w: Any, attr: Any, focus_attr: Optional[Any] = ...) -> None: ...
    get_w: Any = ...
    set_w: Any = ...
    w: Any = ...
    def get_attr(self): ...
    def set_attr(self, attr: Any) -> None: ...
    attr: Any = ...
    def get_focus_attr(self): ...
    def set_focus_attr(self, focus_attr: Any) -> None: ...
    focus_attr: Any = ...
    def __getattr__(self, name: Any): ...
    def sizing(self): ...

class BoxAdapterError(Exception): ...

class BoxAdapter(WidgetDecoration):
    no_cache: Any = ...
    height: Any = ...
    def __init__(self, box_widget: Any, height: Any) -> None: ...
    box_widget: Any = ...
    def sizing(self): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def get_cursor_coords(self, size: Any): ...
    def get_pref_col(self, size: Any): ...
    def keypress(self, size: Any, key: Any): ...
    def move_cursor_to_coords(self, size: Any, col: Any, row: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...
    def render(self, size: Any, focus: bool = ...): ...
    def __getattr__(self, name: Any): ...

class PaddingError(Exception): ...

class Padding(WidgetDecoration):
    left: Any = ...
    right: Any = ...
    min_width: Any = ...
    def __init__(self, w: Any, align: Any = ..., width: Any = ..., min_width: Optional[Any] = ..., left: int = ..., right: int = ...) -> None: ...
    def sizing(self): ...
    align: Any = ...
    width: Any = ...
    def render(self, size: Any, focus: bool = ...): ...
    def padding_values(self, size: Any, focus: Any): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def keypress(self, size: Any, key: Any): ...
    def get_cursor_coords(self, size: Any): ...
    def move_cursor_to_coords(self, size: Any, x: Any, y: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, x: Any, y: Any, focus: Any): ...
    def get_pref_col(self, size: Any): ...

class FillerError(Exception): ...

class Filler(WidgetDecoration):
    top: Any = ...
    bottom: Any = ...
    min_height: Any = ...
    def __init__(self, body: Any, valign: Any = ..., height: Any = ..., min_height: Optional[Any] = ..., top: int = ..., bottom: int = ...) -> None: ...
    def sizing(self): ...
    get_body: Any = ...
    set_body: Any = ...
    body: Any = ...
    def selectable(self): ...
    def filler_values(self, size: Any, focus: Any): ...
    def render(self, size: Any, focus: bool = ...): ...
    def keypress(self, size: Any, key: Any): ...
    def get_cursor_coords(self, size: Any): ...
    def get_pref_col(self, size: Any): ...
    def move_cursor_to_coords(self, size: Any, col: Any, row: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...

class WidgetDisable(WidgetDecoration):
    no_cache: Any = ...
    ignore_focus: bool = ...
    def selectable(self): ...
    def rows(self, size: Any, focus: bool = ...): ...
    def sizing(self): ...
    def pack(self, size: Any, focus: bool = ...): ...
    def render(self, size: Any, focus: bool = ...): ...

def normalize_align(align: Any, err: Any): ...
def simplify_align(align_type: Any, align_amount: Any): ...
def normalize_width(width: Any, err: Any): ...
def simplify_width(width_type: Any, width_amount: Any): ...
def normalize_valign(valign: Any, err: Any): ...
def simplify_valign(valign_type: Any, valign_amount: Any): ...
def normalize_height(height: Any, err: Any): ...
def simplify_height(height_type: Any, height_amount: Any): ...
def calculate_top_bottom_filler(maxrow: Any, valign_type: Any, valign_amount: Any, height_type: Any, height_amount: Any, min_height: Any, top: Any, bottom: Any): ...
def calculate_left_right_padding(maxcol: Any, align_type: Any, align_amount: Any, width_type: Any, width_amount: Any, min_width: Any, left: Any, right: Any): ...
