from .display_common import BaseScreen
from typing import Any, Optional

class LCDScreen(BaseScreen):
    def set_terminal_properties(self, colors: Optional[Any] = ..., bright_is_bold: Optional[Any] = ..., has_underline: Optional[Any] = ...) -> None: ...
    def set_mouse_tracking(self, enable: bool = ...) -> None: ...
    def set_input_timeouts(self, *args: Any) -> None: ...
    def reset_default_terminal_palette(self, *args: Any) -> None: ...
    def draw_screen(self, size: Any, r: Any) -> None: ...
    def clear(self) -> None: ...
    def get_cols_rows(self): ...

class CFLCDScreen(LCDScreen):
    KEYS: Any = ...
    CMD_PING: int = ...
    CMD_VERSION: int = ...
    CMD_CLEAR: int = ...
    CMD_CGRAM: int = ...
    CMD_CURSOR_POSITION: int = ...
    CMD_CURSOR_STYLE: int = ...
    CMD_LCD_CONTRAST: int = ...
    CMD_BACKLIGHT: int = ...
    CMD_LCD_DATA: int = ...
    CMD_GPO: int = ...
    CMD_KEY_ACTIVITY: int = ...
    CMD_ACK: int = ...
    CURSOR_NONE: int = ...
    CURSOR_BLINKING_BLOCK: int = ...
    CURSOR_UNDERSCORE: int = ...
    CURSOR_BLINKING_BLOCK_UNDERSCORE: int = ...
    CURSOR_INVERTING_BLINKING_BLOCK: int = ...
    MAX_PACKET_DATA_LENGTH: int = ...
    colors: int = ...
    has_underline: bool = ...
    device_path: Any = ...
    def __init__(self, device_path: Any, baud: Any) -> None: ...
    @classmethod
    def get_crc(cls, buf: Any): ...
    class InvalidPacket(Exception): ...
    class MoreDataRequired(Exception): ...

class KeyRepeatSimulator:
    repeat_delay: Any = ...
    repeat_next: Any = ...
    pressed: Any = ...
    multiple_pressed: bool = ...
    def __init__(self, repeat_delay: Any, repeat_next: Any) -> None: ...
    def press(self, key: Any) -> None: ...
    def release(self, key: Any) -> None: ...
    def next_event(self): ...
    def sent_event(self) -> None: ...

class CF635Screen(CFLCDScreen):
    DISPLAY_SIZE: Any = ...
    CGROM: str = ...
    cursor_style: Any = ...
    repeat_delay: Any = ...
    repeat_next: Any = ...
    key_repeat: Any = ...
    key_map: Any = ...
    def __init__(self, device_path: Any, baud: int = ..., repeat_delay: float = ..., repeat_next: float = ..., key_map: Any = ...) -> None: ...
    def get_input_descriptors(self): ...
    def get_input_nonblocking(self): ...
    def queue_command(self, command: Any, data: Any) -> None: ...
    def draw_screen(self, size: Any, canvas: Any) -> None: ...
    def program_cgram(self, index: Any, data: Any) -> None: ...
    def set_cursor_style(self, style: Any) -> None: ...
    def set_backlight(self, value: Any) -> None: ...
    def set_lcd_contrast(self, value: Any) -> None: ...
    def set_led_pin(self, led: Any, rg: Any, value: Any) -> None: ...
