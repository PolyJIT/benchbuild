from typing import Any, Optional
from urwid.container import WidgetContainerMixin
from urwid.monitored_list import MonitoredFocusList, MonitoredList
from urwid.widget import Widget

class ListWalkerError(Exception): ...

class ListWalker:
    signals: Any = ...
    def get_focus(self): ...
    def get_next(self, position: Any): ...
    def get_prev(self, position: Any): ...

class SimpleListWalker(MonitoredList, ListWalker):
    focus: int = ...
    def __init__(self, contents: Any) -> None: ...
    contents: Any = ...
    def set_modified_callback(self, callback: Any) -> None: ...
    def set_focus(self, position: Any) -> None: ...
    def next_position(self, position: Any): ...
    def prev_position(self, position: Any): ...
    def positions(self, reverse: bool = ...): ...

class SimpleFocusListWalker(ListWalker, MonitoredFocusList):
    def __init__(self, contents: Any) -> None: ...
    def set_modified_callback(self, callback: Any) -> None: ...
    focus: Any = ...
    def set_focus(self, position: Any) -> None: ...
    def next_position(self, position: Any): ...
    def prev_position(self, position: Any): ...
    def positions(self, reverse: bool = ...): ...

class ListBoxError(Exception): ...

class ListBox(Widget, WidgetContainerMixin):
    offset_rows: int = ...
    inset_fraction: Any = ...
    pref_col: str = ...
    set_focus_pending: str = ...
    set_focus_valign_pending: Any = ...
    def __init__(self, body: Any) -> None: ...
    body: Any = ...
    def calculate_visible(self, size: Any, focus: bool = ...): ...
    def render(self, size: Any, focus: bool = ...): ...
    def get_cursor_coords(self, size: Any): ...
    def set_focus_valign(self, valign: Any) -> None: ...
    def set_focus(self, position: Any, coming_from: Optional[Any] = ...) -> None: ...
    def get_focus(self): ...
    focus: Any = ...
    focus_position: Any = ...
    def _contents__getitem__(self, key: Any): ...
    contents: Any = ...
    def options(self) -> None: ...
    def shift_focus(self, size: Any, offset_inset: Any) -> None: ...
    def update_pref_col_from_focus(self, size: Any) -> None: ...
    def change_focus(self, size: Any, position: Any, offset_inset: int = ..., coming_from: Optional[Any] = ..., cursor_coords: Optional[Any] = ..., snap_rows: Optional[Any] = ...) -> None: ...
    def get_focus_offset_inset(self, size: Any): ...
    def make_cursor_visible(self, size: Any) -> None: ...
    def keypress(self, size: Any, key: Any): ...
    def mouse_event(self, size: Any, event: Any, button: Any, col: Any, row: Any, focus: Any): ...
    def ends_visible(self, size: Any, focus: bool = ...): ...
    def __iter__(self) -> Any: ...
    def __reversed__(self) -> None: ...
