from typing import Any, Optional

class MetaSignals(type):
    def __init__(cls, name: Any, bases: Any, d: Any) -> None: ...

def setdefaultattr(obj: Any, name: Any, value: Any): ...

class Key: ...

class Signals:
    def __init__(self) -> None: ...
    def register(self, sig_cls: Any, signals: Any) -> None: ...
    def connect(self, obj: Any, name: Any, callback: Any, user_arg: Optional[Any] = ..., weak_args: Optional[Any] = ..., user_args: Optional[Any] = ...): ...
    def disconnect(self, obj: Any, name: Any, callback: Any, user_arg: Optional[Any] = ..., weak_args: Optional[Any] = ..., user_args: Optional[Any] = ...): ...
    def disconnect_by_key(self, obj: Any, name: Any, key: Any) -> None: ...
    def emit(self, obj: Any, name: Any, *args: Any): ...

emit_signal: Any
register_signal: Any
connect_signal: Any
disconnect_signal: Any
disconnect_signal_by_key: Any
